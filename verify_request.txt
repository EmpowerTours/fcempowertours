chainid=10143&module=contract&action=verifysourcecode&codeformat=solidity-single-file&sourceCode=%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%3E%3D0.4.16%20%3E%3D0.5.0%20%3E%3D0.6.2%20%3E%3D0.8.4%20%5E0.8.20%3B%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Futils%2FContext.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.0.1%29%20%28utils%2FContext.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Provides%20information%20about%20the%20current%20execution%20context%2C%20including%20the%0A%20%2A%20sender%20of%20the%20transaction%20and%20its%20data.%20While%20these%20are%20generally%20available%0A%20%2A%20via%20msg.sender%20and%20msg.data%2C%20they%20should%20not%20be%20accessed%20in%20such%20a%20direct%0A%20%2A%20manner%2C%20since%20when%20dealing%20with%20meta-transactions%20the%20account%20sending%20and%0A%20%2A%20paying%20for%20execution%20may%20not%20be%20the%20actual%20sender%20%28as%20far%20as%20an%20application%0A%20%2A%20is%20concerned%29.%0A%20%2A%0A%20%2A%20This%20contract%20is%20only%20required%20for%20intermediate%2C%20library-like%20contracts.%0A%20%2A%2F%0Aabstract%20contract%20Context%20%7B%0A%20%20%20%20function%20_msgSender%28%29%20internal%20view%20virtual%20returns%20%28address%29%20%7B%0A%20%20%20%20%20%20%20%20return%20msg.sender%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20_msgData%28%29%20internal%20view%20virtual%20returns%20%28bytes%20calldata%29%20%7B%0A%20%20%20%20%20%20%20%20return%20msg.data%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20_contextSuffixLength%28%29%20internal%20view%20virtual%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20return%200%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Futils%2Fintrospection%2FIERC165.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.4.0%29%20%28utils%2Fintrospection%2FIERC165.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Interface%20of%20the%20ERC-165%20standard%2C%20as%20defined%20in%20the%0A%20%2A%20https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-165%5BERC%5D.%0A%20%2A%0A%20%2A%20Implementers%20can%20declare%20support%20of%20contract%20interfaces%2C%20which%20can%20then%20be%0A%20%2A%20queried%20by%20others%20%28%7BERC165Checker%7D%29.%0A%20%2A%0A%20%2A%20For%20an%20implementation%2C%20see%20%7BERC165%7D.%0A%20%2A%2F%0Ainterface%20IERC165%20%7B%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20true%20if%20this%20contract%20implements%20the%20interface%20defined%20by%0A%20%20%20%20%20%2A%20%60interfaceId%60.%20See%20the%20corresponding%0A%20%20%20%20%20%2A%20https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-165%23how-interfaces-are-identified%5BERC%20section%5D%0A%20%20%20%20%20%2A%20to%20learn%20more%20about%20how%20these%20ids%20are%20created.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20This%20function%20call%20must%20use%20less%20than%2030%20000%20gas.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20supportsInterface%28bytes4%20interfaceId%29%20external%20view%20returns%20%28bool%29%3B%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Ftoken%2FERC721%2FIERC721Receiver.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.4.0%29%20%28token%2FERC721%2FIERC721Receiver.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40title%20ERC-721%20token%20receiver%20interface%0A%20%2A%20%40dev%20Interface%20for%20any%20contract%20that%20wants%20to%20support%20safeTransfers%0A%20%2A%20from%20ERC-721%20asset%20contracts.%0A%20%2A%2F%0Ainterface%20IERC721Receiver%20%7B%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Whenever%20an%20%7BIERC721%7D%20%60tokenId%60%20token%20is%20transferred%20to%20this%20contract%20via%20%7BIERC721-safeTransferFrom%7D%0A%20%20%20%20%20%2A%20by%20%60operator%60%20from%20%60from%60%2C%20this%20function%20is%20called.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20It%20must%20return%20its%20Solidity%20selector%20to%20confirm%20the%20token%20transfer.%0A%20%20%20%20%20%2A%20If%20any%20other%20value%20is%20returned%20or%20the%20interface%20is%20not%20implemented%20by%20the%20recipient%2C%20the%20transfer%20will%20be%0A%20%20%20%20%20%2A%20reverted.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20The%20selector%20can%20be%20obtained%20in%20Solidity%20with%20%60IERC721Receiver.onERC721Received.selector%60.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20onERC721Received%28%0A%20%20%20%20%20%20%20%20address%20operator%2C%0A%20%20%20%20%20%20%20%20address%20from%2C%0A%20%20%20%20%20%20%20%20uint256%20tokenId%2C%0A%20%20%20%20%20%20%20%20bytes%20calldata%20data%0A%20%20%20%20%29%20external%20returns%20%28bytes4%29%3B%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Futils%2FPanic.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.1.0%29%20%28utils%2FPanic.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Helper%20library%20for%20emitting%20standardized%20panic%20codes.%0A%20%2A%0A%20%2A%20%60%60%60solidity%0A%20%2A%20contract%20Example%20%7B%0A%20%2A%20%20%20%20%20%20using%20Panic%20for%20uint256%3B%0A%20%2A%0A%20%2A%20%20%20%20%20%20%2F%2F%20Use%20any%20of%20the%20declared%20internal%20constants%0A%20%2A%20%20%20%20%20%20function%20foo%28%29%20%7B%20Panic.GENERIC.panic%28%29%3B%20%7D%0A%20%2A%0A%20%2A%20%20%20%20%20%20%2F%2F%20Alternatively%0A%20%2A%20%20%20%20%20%20function%20foo%28%29%20%7B%20Panic.panic%28Panic.GENERIC%29%3B%20%7D%0A%20%2A%20%7D%0A%20%2A%20%60%60%60%0A%20%2A%0A%20%2A%20Follows%20the%20list%20from%20https%3A%2F%2Fgithub.com%2Fethereum%2Fsolidity%2Fblob%2Fv0.8.24%2Flibsolutil%2FErrorCodes.h%5Blibsolutil%5D.%0A%20%2A%0A%20%2A%20_Available%20since%20v5.1._%0A%20%2A%2F%0A%2F%2F%20slither-disable-next-line%20unused-state%0Alibrary%20Panic%20%7B%0A%20%20%20%20%2F%2F%2F%20%40dev%20generic%20%2F%20unspecified%20error%0A%20%20%20%20uint256%20internal%20constant%20GENERIC%20%3D%200x00%3B%0A%20%20%20%20%2F%2F%2F%20%40dev%20used%20by%20the%20assert%28%29%20builtin%0A%20%20%20%20uint256%20internal%20constant%20ASSERT%20%3D%200x01%3B%0A%20%20%20%20%2F%2F%2F%20%40dev%20arithmetic%20underflow%20or%20overflow%0A%20%20%20%20uint256%20internal%20constant%20UNDER_OVERFLOW%20%3D%200x11%3B%0A%20%20%20%20%2F%2F%2F%20%40dev%20division%20or%20modulo%20by%20zero%0A%20%20%20%20uint256%20internal%20constant%20DIVISION_BY_ZERO%20%3D%200x12%3B%0A%20%20%20%20%2F%2F%2F%20%40dev%20enum%20conversion%20error%0A%20%20%20%20uint256%20internal%20constant%20ENUM_CONVERSION_ERROR%20%3D%200x21%3B%0A%20%20%20%20%2F%2F%2F%20%40dev%20invalid%20encoding%20in%20storage%0A%20%20%20%20uint256%20internal%20constant%20STORAGE_ENCODING_ERROR%20%3D%200x22%3B%0A%20%20%20%20%2F%2F%2F%20%40dev%20empty%20array%20pop%0A%20%20%20%20uint256%20internal%20constant%20EMPTY_ARRAY_POP%20%3D%200x31%3B%0A%20%20%20%20%2F%2F%2F%20%40dev%20array%20out%20of%20bounds%20access%0A%20%20%20%20uint256%20internal%20constant%20ARRAY_OUT_OF_BOUNDS%20%3D%200x32%3B%0A%20%20%20%20%2F%2F%2F%20%40dev%20resource%20error%20%28too%20large%20allocation%20or%20too%20large%20array%29%0A%20%20%20%20uint256%20internal%20constant%20RESOURCE_ERROR%20%3D%200x41%3B%0A%20%20%20%20%2F%2F%2F%20%40dev%20calling%20invalid%20internal%20function%0A%20%20%20%20uint256%20internal%20constant%20INVALID_INTERNAL_FUNCTION%20%3D%200x51%3B%0A%0A%20%20%20%20%2F%2F%2F%20%40dev%20Reverts%20with%20a%20panic%20code.%20Recommended%20to%20use%20with%0A%20%20%20%20%2F%2F%2F%20the%20internal%20constants%20with%20predefined%20codes.%0A%20%20%20%20function%20panic%28uint256%20code%29%20internal%20pure%20%7B%0A%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore%280x00%2C%200x4e487b71%29%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore%280x20%2C%20code%29%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%280x1c%2C%200x24%29%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Futils%2Fmath%2FSafeCast.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.1.0%29%20%28utils%2Fmath%2FSafeCast.sol%29%0A%2F%2F%20This%20file%20was%20procedurally%20generated%20from%20scripts%2Fgenerate%2Ftemplates%2FSafeCast.js.%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Wrappers%20over%20Solidity%27s%20uintXX%2FintXX%2Fbool%20casting%20operators%20with%20added%20overflow%0A%20%2A%20checks.%0A%20%2A%0A%20%2A%20Downcasting%20from%20uint256%2Fint256%20in%20Solidity%20does%20not%20revert%20on%20overflow.%20This%20can%0A%20%2A%20easily%20result%20in%20undesired%20exploitation%20or%20bugs%2C%20since%20developers%20usually%0A%20%2A%20assume%20that%20overflows%20raise%20errors.%20%60SafeCast%60%20restores%20this%20intuition%20by%0A%20%2A%20reverting%20the%20transaction%20when%20such%20an%20operation%20overflows.%0A%20%2A%0A%20%2A%20Using%20this%20library%20instead%20of%20the%20unchecked%20operations%20eliminates%20an%20entire%0A%20%2A%20class%20of%20bugs%2C%20so%20it%27s%20recommended%20to%20use%20it%20always.%0A%20%2A%2F%0Alibrary%20SafeCast%20%7B%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Value%20doesn%27t%20fit%20in%20an%20uint%20of%20%60bits%60%20size.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20SafeCastOverflowedUintDowncast%28uint8%20bits%2C%20uint256%20value%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20An%20int%20value%20doesn%27t%20fit%20in%20an%20uint%20of%20%60bits%60%20size.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20SafeCastOverflowedIntToUint%28int256%20value%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Value%20doesn%27t%20fit%20in%20an%20int%20of%20%60bits%60%20size.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20SafeCastOverflowedIntDowncast%28uint8%20bits%2C%20int256%20value%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20An%20uint%20value%20doesn%27t%20fit%20in%20an%20int%20of%20%60bits%60%20size.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20SafeCastOverflowedUintToInt%28uint256%20value%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint248%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint248%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint248%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20248%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint248%28uint256%20value%29%20internal%20pure%20returns%20%28uint248%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint248%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28248%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint248%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint240%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint240%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint240%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20240%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint240%28uint256%20value%29%20internal%20pure%20returns%20%28uint240%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint240%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28240%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint240%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint232%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint232%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint232%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20232%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint232%28uint256%20value%29%20internal%20pure%20returns%20%28uint232%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint232%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28232%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint232%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint224%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint224%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint224%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20224%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint224%28uint256%20value%29%20internal%20pure%20returns%20%28uint224%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint224%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28224%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint224%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint216%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint216%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint216%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20216%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint216%28uint256%20value%29%20internal%20pure%20returns%20%28uint216%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint216%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28216%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint216%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint208%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint208%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint208%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20208%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint208%28uint256%20value%29%20internal%20pure%20returns%20%28uint208%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint208%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28208%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint208%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint200%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint200%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint200%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20200%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint200%28uint256%20value%29%20internal%20pure%20returns%20%28uint200%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint200%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28200%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint200%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint192%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint192%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint192%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20192%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint192%28uint256%20value%29%20internal%20pure%20returns%20%28uint192%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint192%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28192%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint192%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint184%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint184%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint184%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20184%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint184%28uint256%20value%29%20internal%20pure%20returns%20%28uint184%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint184%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28184%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint184%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint176%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint176%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint176%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20176%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint176%28uint256%20value%29%20internal%20pure%20returns%20%28uint176%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint176%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28176%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint176%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint168%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint168%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint168%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20168%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint168%28uint256%20value%29%20internal%20pure%20returns%20%28uint168%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint168%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28168%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint168%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint160%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint160%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint160%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20160%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint160%28uint256%20value%29%20internal%20pure%20returns%20%28uint160%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint160%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28160%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint160%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint152%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint152%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint152%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20152%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint152%28uint256%20value%29%20internal%20pure%20returns%20%28uint152%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint152%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28152%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint152%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint144%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint144%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint144%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20144%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint144%28uint256%20value%29%20internal%20pure%20returns%20%28uint144%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint144%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28144%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint144%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint136%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint136%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint136%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20136%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint136%28uint256%20value%29%20internal%20pure%20returns%20%28uint136%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint136%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28136%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint136%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint128%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint128%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint128%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20128%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint128%28uint256%20value%29%20internal%20pure%20returns%20%28uint128%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint128%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28128%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint128%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint120%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint120%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint120%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20120%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint120%28uint256%20value%29%20internal%20pure%20returns%20%28uint120%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint120%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28120%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint120%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint112%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint112%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint112%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20112%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint112%28uint256%20value%29%20internal%20pure%20returns%20%28uint112%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint112%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28112%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint112%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint104%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint104%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint104%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20104%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint104%28uint256%20value%29%20internal%20pure%20returns%20%28uint104%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint104%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%28104%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint104%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint96%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint96%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint96%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2096%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint96%28uint256%20value%29%20internal%20pure%20returns%20%28uint96%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint96%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%2896%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint96%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint88%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint88%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint88%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2088%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint88%28uint256%20value%29%20internal%20pure%20returns%20%28uint88%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint88%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%2888%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint88%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint80%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint80%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint80%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2080%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint80%28uint256%20value%29%20internal%20pure%20returns%20%28uint80%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint80%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%2880%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint80%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint72%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint72%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint72%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2072%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint72%28uint256%20value%29%20internal%20pure%20returns%20%28uint72%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint72%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%2872%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint72%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint64%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint64%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint64%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2064%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint64%28uint256%20value%29%20internal%20pure%20returns%20%28uint64%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint64%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%2864%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint64%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint56%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint56%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint56%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2056%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint56%28uint256%20value%29%20internal%20pure%20returns%20%28uint56%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint56%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%2856%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint56%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint48%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint48%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint48%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2048%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint48%28uint256%20value%29%20internal%20pure%20returns%20%28uint48%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint48%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%2848%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint48%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint40%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint40%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint40%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2040%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint40%28uint256%20value%29%20internal%20pure%20returns%20%28uint40%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint40%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%2840%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint40%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint32%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint32%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint32%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2032%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint32%28uint256%20value%29%20internal%20pure%20returns%20%28uint32%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint32%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%2832%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint32%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint24%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint24%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint24%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2024%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint24%28uint256%20value%29%20internal%20pure%20returns%20%28uint24%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint24%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%2824%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint24%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint16%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint16%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint16%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2016%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint16%28uint256%20value%29%20internal%20pure%20returns%20%28uint16%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint16%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%2816%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint16%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20uint8%20from%20uint256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20greater%20than%20largest%20uint8%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60uint8%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%208%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint8%28uint256%20value%29%20internal%20pure%20returns%20%28uint8%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20type%28uint8%29.max%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintDowncast%288%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint8%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Converts%20a%20signed%20int256%20into%20an%20unsigned%20uint256.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20be%20greater%20than%20or%20equal%20to%200.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint256%28int256%20value%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%20%3C%200%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntToUint%28value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20uint256%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int248%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int248%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int248%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int248%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20248%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt248%28int256%20value%29%20internal%20pure%20returns%20%28int248%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int248%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28248%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int240%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int240%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int240%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int240%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20240%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt240%28int256%20value%29%20internal%20pure%20returns%20%28int240%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int240%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28240%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int232%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int232%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int232%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int232%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20232%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt232%28int256%20value%29%20internal%20pure%20returns%20%28int232%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int232%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28232%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int224%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int224%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int224%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int224%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20224%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt224%28int256%20value%29%20internal%20pure%20returns%20%28int224%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int224%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28224%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int216%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int216%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int216%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int216%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20216%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt216%28int256%20value%29%20internal%20pure%20returns%20%28int216%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int216%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28216%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int208%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int208%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int208%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int208%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20208%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt208%28int256%20value%29%20internal%20pure%20returns%20%28int208%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int208%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28208%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int200%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int200%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int200%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int200%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20200%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt200%28int256%20value%29%20internal%20pure%20returns%20%28int200%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int200%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28200%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int192%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int192%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int192%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int192%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20192%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt192%28int256%20value%29%20internal%20pure%20returns%20%28int192%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int192%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28192%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int184%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int184%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int184%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int184%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20184%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt184%28int256%20value%29%20internal%20pure%20returns%20%28int184%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int184%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28184%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int176%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int176%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int176%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int176%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20176%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt176%28int256%20value%29%20internal%20pure%20returns%20%28int176%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int176%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28176%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int168%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int168%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int168%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int168%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20168%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt168%28int256%20value%29%20internal%20pure%20returns%20%28int168%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int168%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28168%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int160%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int160%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int160%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int160%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20160%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt160%28int256%20value%29%20internal%20pure%20returns%20%28int160%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int160%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28160%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int152%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int152%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int152%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int152%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20152%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt152%28int256%20value%29%20internal%20pure%20returns%20%28int152%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int152%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28152%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int144%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int144%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int144%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int144%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20144%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt144%28int256%20value%29%20internal%20pure%20returns%20%28int144%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int144%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28144%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int136%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int136%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int136%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int136%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20136%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt136%28int256%20value%29%20internal%20pure%20returns%20%28int136%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int136%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28136%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int128%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int128%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int128%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int128%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20128%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt128%28int256%20value%29%20internal%20pure%20returns%20%28int128%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int128%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28128%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int120%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int120%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int120%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int120%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20120%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt120%28int256%20value%29%20internal%20pure%20returns%20%28int120%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int120%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28120%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int112%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int112%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int112%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int112%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20112%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt112%28int256%20value%29%20internal%20pure%20returns%20%28int112%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int112%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28112%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int104%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int104%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int104%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int104%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%20104%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt104%28int256%20value%29%20internal%20pure%20returns%20%28int104%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int104%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%28104%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int96%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int96%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int96%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int96%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2096%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt96%28int256%20value%29%20internal%20pure%20returns%20%28int96%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int96%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%2896%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int88%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int88%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int88%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int88%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2088%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt88%28int256%20value%29%20internal%20pure%20returns%20%28int88%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int88%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%2888%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int80%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int80%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int80%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int80%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2080%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt80%28int256%20value%29%20internal%20pure%20returns%20%28int80%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int80%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%2880%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int72%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int72%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int72%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int72%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2072%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt72%28int256%20value%29%20internal%20pure%20returns%20%28int72%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int72%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%2872%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int64%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int64%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int64%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int64%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2064%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt64%28int256%20value%29%20internal%20pure%20returns%20%28int64%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int64%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%2864%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int56%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int56%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int56%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int56%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2056%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt56%28int256%20value%29%20internal%20pure%20returns%20%28int56%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int56%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%2856%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int48%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int48%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int48%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int48%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2048%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt48%28int256%20value%29%20internal%20pure%20returns%20%28int48%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int48%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%2848%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int40%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int40%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int40%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int40%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2040%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt40%28int256%20value%29%20internal%20pure%20returns%20%28int40%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int40%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%2840%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int32%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int32%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int32%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int32%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2032%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt32%28int256%20value%29%20internal%20pure%20returns%20%28int32%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int32%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%2832%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int24%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int24%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int24%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int24%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2024%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt24%28int256%20value%29%20internal%20pure%20returns%20%28int24%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int24%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%2824%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int16%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int16%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int16%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int16%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%2016%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt16%28int256%20value%29%20internal%20pure%20returns%20%28int16%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int16%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%2816%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20downcasted%20int8%20from%20int256%2C%20reverting%20on%0A%20%20%20%20%20%2A%20overflow%20%28when%20the%20input%20is%20less%20than%20smallest%20int8%20or%0A%20%20%20%20%20%2A%20greater%20than%20largest%20int8%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Counterpart%20to%20Solidity%27s%20%60int8%60%20operator.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20fit%20into%208%20bits%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt8%28int256%20value%29%20internal%20pure%20returns%20%28int8%20downcasted%29%20%7B%0A%20%20%20%20%20%20%20%20downcasted%20%3D%20int8%28value%29%3B%0A%20%20%20%20%20%20%20%20if%20%28downcasted%20%21%3D%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedIntDowncast%288%2C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Converts%20an%20unsigned%20uint256%20into%20a%20signed%20int256.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20input%20must%20be%20less%20than%20or%20equal%20to%20maxInt256.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toInt256%28uint256%20value%29%20internal%20pure%20returns%20%28int256%29%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Note%3A%20Unsafe%20cast%20below%20is%20okay%20because%20%60type%28int256%29.max%60%20is%20guaranteed%20to%20be%20positive%0A%20%20%20%20%20%20%20%20if%20%28value%20%3E%20uint256%28type%28int256%29.max%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20SafeCastOverflowedUintToInt%28value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20int256%28value%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Cast%20a%20boolean%20%28false%20or%20true%29%20to%20a%20uint256%20%280%20or%201%29%20with%20no%20jump.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toUint%28bool%20b%29%20internal%20pure%20returns%20%28uint256%20u%29%20%7B%0A%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20u%20%3A%3D%20iszero%28iszero%28b%29%29%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Finterfaces%2Fdraft-IERC6093.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.4.0%29%20%28interfaces%2Fdraft-IERC6093.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Standard%20ERC-20%20Errors%0A%20%2A%20Interface%20of%20the%20https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-6093%5BERC-6093%5D%20custom%20errors%20for%20ERC-20%20tokens.%0A%20%2A%2F%0Ainterface%20IERC20Errors%20%7B%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20an%20error%20related%20to%20the%20current%20%60balance%60%20of%20a%20%60sender%60.%20Used%20in%20transfers.%0A%20%20%20%20%20%2A%20%40param%20sender%20Address%20whose%20tokens%20are%20being%20transferred.%0A%20%20%20%20%20%2A%20%40param%20balance%20Current%20balance%20for%20the%20interacting%20account.%0A%20%20%20%20%20%2A%20%40param%20needed%20Minimum%20amount%20required%20to%20perform%20a%20transfer.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC20InsufficientBalance%28address%20sender%2C%20uint256%20balance%2C%20uint256%20needed%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20token%20%60sender%60.%20Used%20in%20transfers.%0A%20%20%20%20%20%2A%20%40param%20sender%20Address%20whose%20tokens%20are%20being%20transferred.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC20InvalidSender%28address%20sender%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20token%20%60receiver%60.%20Used%20in%20transfers.%0A%20%20%20%20%20%2A%20%40param%20receiver%20Address%20to%20which%20tokens%20are%20being%20transferred.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC20InvalidReceiver%28address%20receiver%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20%60spender%60%E2%80%99s%20%60allowance%60.%20Used%20in%20transfers.%0A%20%20%20%20%20%2A%20%40param%20spender%20Address%20that%20may%20be%20allowed%20to%20operate%20on%20tokens%20without%20being%20their%20owner.%0A%20%20%20%20%20%2A%20%40param%20allowance%20Amount%20of%20tokens%20a%20%60spender%60%20is%20allowed%20to%20operate%20with.%0A%20%20%20%20%20%2A%20%40param%20needed%20Minimum%20amount%20required%20to%20perform%20a%20transfer.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC20InsufficientAllowance%28address%20spender%2C%20uint256%20allowance%2C%20uint256%20needed%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20%60approver%60%20of%20a%20token%20to%20be%20approved.%20Used%20in%20approvals.%0A%20%20%20%20%20%2A%20%40param%20approver%20Address%20initiating%20an%20approval%20operation.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC20InvalidApprover%28address%20approver%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20%60spender%60%20to%20be%20approved.%20Used%20in%20approvals.%0A%20%20%20%20%20%2A%20%40param%20spender%20Address%20that%20may%20be%20allowed%20to%20operate%20on%20tokens%20without%20being%20their%20owner.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC20InvalidSpender%28address%20spender%29%3B%0A%7D%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Standard%20ERC-721%20Errors%0A%20%2A%20Interface%20of%20the%20https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-6093%5BERC-6093%5D%20custom%20errors%20for%20ERC-721%20tokens.%0A%20%2A%2F%0Ainterface%20IERC721Errors%20%7B%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20that%20an%20address%20can%27t%20be%20an%20owner.%20For%20example%2C%20%60address%280%29%60%20is%20a%20forbidden%20owner%20in%20ERC-20.%0A%20%20%20%20%20%2A%20Used%20in%20balance%20queries.%0A%20%20%20%20%20%2A%20%40param%20owner%20Address%20of%20the%20current%20owner%20of%20a%20token.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC721InvalidOwner%28address%20owner%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20%60tokenId%60%20whose%20%60owner%60%20is%20the%20zero%20address.%0A%20%20%20%20%20%2A%20%40param%20tokenId%20Identifier%20number%20of%20a%20token.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC721NonexistentToken%28uint256%20tokenId%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20an%20error%20related%20to%20the%20ownership%20over%20a%20particular%20token.%20Used%20in%20transfers.%0A%20%20%20%20%20%2A%20%40param%20sender%20Address%20whose%20tokens%20are%20being%20transferred.%0A%20%20%20%20%20%2A%20%40param%20tokenId%20Identifier%20number%20of%20a%20token.%0A%20%20%20%20%20%2A%20%40param%20owner%20Address%20of%20the%20current%20owner%20of%20a%20token.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC721IncorrectOwner%28address%20sender%2C%20uint256%20tokenId%2C%20address%20owner%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20token%20%60sender%60.%20Used%20in%20transfers.%0A%20%20%20%20%20%2A%20%40param%20sender%20Address%20whose%20tokens%20are%20being%20transferred.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC721InvalidSender%28address%20sender%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20token%20%60receiver%60.%20Used%20in%20transfers.%0A%20%20%20%20%20%2A%20%40param%20receiver%20Address%20to%20which%20tokens%20are%20being%20transferred.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC721InvalidReceiver%28address%20receiver%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20%60operator%60%E2%80%99s%20approval.%20Used%20in%20transfers.%0A%20%20%20%20%20%2A%20%40param%20operator%20Address%20that%20may%20be%20allowed%20to%20operate%20on%20tokens%20without%20being%20their%20owner.%0A%20%20%20%20%20%2A%20%40param%20tokenId%20Identifier%20number%20of%20a%20token.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC721InsufficientApproval%28address%20operator%2C%20uint256%20tokenId%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20%60approver%60%20of%20a%20token%20to%20be%20approved.%20Used%20in%20approvals.%0A%20%20%20%20%20%2A%20%40param%20approver%20Address%20initiating%20an%20approval%20operation.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC721InvalidApprover%28address%20approver%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20%60operator%60%20to%20be%20approved.%20Used%20in%20approvals.%0A%20%20%20%20%20%2A%20%40param%20operator%20Address%20that%20may%20be%20allowed%20to%20operate%20on%20tokens%20without%20being%20their%20owner.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC721InvalidOperator%28address%20operator%29%3B%0A%7D%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Standard%20ERC-1155%20Errors%0A%20%2A%20Interface%20of%20the%20https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-6093%5BERC-6093%5D%20custom%20errors%20for%20ERC-1155%20tokens.%0A%20%2A%2F%0Ainterface%20IERC1155Errors%20%7B%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20an%20error%20related%20to%20the%20current%20%60balance%60%20of%20a%20%60sender%60.%20Used%20in%20transfers.%0A%20%20%20%20%20%2A%20%40param%20sender%20Address%20whose%20tokens%20are%20being%20transferred.%0A%20%20%20%20%20%2A%20%40param%20balance%20Current%20balance%20for%20the%20interacting%20account.%0A%20%20%20%20%20%2A%20%40param%20needed%20Minimum%20amount%20required%20to%20perform%20a%20transfer.%0A%20%20%20%20%20%2A%20%40param%20tokenId%20Identifier%20number%20of%20a%20token.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC1155InsufficientBalance%28address%20sender%2C%20uint256%20balance%2C%20uint256%20needed%2C%20uint256%20tokenId%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20token%20%60sender%60.%20Used%20in%20transfers.%0A%20%20%20%20%20%2A%20%40param%20sender%20Address%20whose%20tokens%20are%20being%20transferred.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC1155InvalidSender%28address%20sender%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20token%20%60receiver%60.%20Used%20in%20transfers.%0A%20%20%20%20%20%2A%20%40param%20receiver%20Address%20to%20which%20tokens%20are%20being%20transferred.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC1155InvalidReceiver%28address%20receiver%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20%60operator%60%E2%80%99s%20approval.%20Used%20in%20transfers.%0A%20%20%20%20%20%2A%20%40param%20operator%20Address%20that%20may%20be%20allowed%20to%20operate%20on%20tokens%20without%20being%20their%20owner.%0A%20%20%20%20%20%2A%20%40param%20owner%20Address%20of%20the%20current%20owner%20of%20a%20token.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC1155MissingApprovalForAll%28address%20operator%2C%20address%20owner%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20%60approver%60%20of%20a%20token%20to%20be%20approved.%20Used%20in%20approvals.%0A%20%20%20%20%20%2A%20%40param%20approver%20Address%20initiating%20an%20approval%20operation.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC1155InvalidApprover%28address%20approver%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20a%20failure%20with%20the%20%60operator%60%20to%20be%20approved.%20Used%20in%20approvals.%0A%20%20%20%20%20%2A%20%40param%20operator%20Address%20that%20may%20be%20allowed%20to%20operate%20on%20tokens%20without%20being%20their%20owner.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC1155InvalidOperator%28address%20operator%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Indicates%20an%20array%20length%20mismatch%20between%20ids%20and%20values%20in%20a%20safeBatchTransferFrom%20operation.%0A%20%20%20%20%20%2A%20Used%20in%20batch%20transfers.%0A%20%20%20%20%20%2A%20%40param%20idsLength%20Length%20of%20the%20array%20of%20token%20identifiers%0A%20%20%20%20%20%2A%20%40param%20valuesLength%20Length%20of%20the%20array%20of%20token%20amounts%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20ERC1155InvalidArrayLength%28uint256%20idsLength%2C%20uint256%20valuesLength%29%3B%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Futils%2Fintrospection%2FERC165.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.4.0%29%20%28utils%2Fintrospection%2FERC165.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Implementation%20of%20the%20%7BIERC165%7D%20interface.%0A%20%2A%0A%20%2A%20Contracts%20that%20want%20to%20implement%20ERC-165%20should%20inherit%20from%20this%20contract%20and%20override%20%7BsupportsInterface%7D%20to%20check%0A%20%2A%20for%20the%20additional%20interface%20id%20that%20will%20be%20supported.%20For%20example%3A%0A%20%2A%0A%20%2A%20%60%60%60solidity%0A%20%2A%20function%20supportsInterface%28bytes4%20interfaceId%29%20public%20view%20virtual%20override%20returns%20%28bool%29%20%7B%0A%20%2A%20%20%20%20%20return%20interfaceId%20%3D%3D%20type%28MyInterface%29.interfaceId%20%7C%7C%20super.supportsInterface%28interfaceId%29%3B%0A%20%2A%20%7D%0A%20%2A%20%60%60%60%0A%20%2A%2F%0Aabstract%20contract%20ERC165%20is%20IERC165%20%7B%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC165%0A%20%20%20%20function%20supportsInterface%28bytes4%20interfaceId%29%20public%20view%20virtual%20returns%20%28bool%29%20%7B%0A%20%20%20%20%20%20%20%20return%20interfaceId%20%3D%3D%20type%28IERC165%29.interfaceId%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Ftoken%2FERC721%2FIERC721.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.4.0%29%20%28token%2FERC721%2FIERC721.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Required%20interface%20of%20an%20ERC-721%20compliant%20contract.%0A%20%2A%2F%0Ainterface%20IERC721%20is%20IERC165%20%7B%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Emitted%20when%20%60tokenId%60%20token%20is%20transferred%20from%20%60from%60%20to%20%60to%60.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20event%20Transfer%28address%20indexed%20from%2C%20address%20indexed%20to%2C%20uint256%20indexed%20tokenId%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Emitted%20when%20%60owner%60%20enables%20%60approved%60%20to%20manage%20the%20%60tokenId%60%20token.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20event%20Approval%28address%20indexed%20owner%2C%20address%20indexed%20approved%2C%20uint256%20indexed%20tokenId%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Emitted%20when%20%60owner%60%20enables%20or%20disables%20%28%60approved%60%29%20%60operator%60%20to%20manage%20all%20of%20its%20assets.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20event%20ApprovalForAll%28address%20indexed%20owner%2C%20address%20indexed%20operator%2C%20bool%20approved%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20number%20of%20tokens%20in%20%60%60owner%60%60%27s%20account.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20balanceOf%28address%20owner%29%20external%20view%20returns%20%28uint256%20balance%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20owner%20of%20the%20%60tokenId%60%20token.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20%60tokenId%60%20must%20exist.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20ownerOf%28uint256%20tokenId%29%20external%20view%20returns%20%28address%20owner%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Safely%20transfers%20%60tokenId%60%20token%20from%20%60from%60%20to%20%60to%60.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20%60from%60%20cannot%20be%20the%20zero%20address.%0A%20%20%20%20%20%2A%20-%20%60to%60%20cannot%20be%20the%20zero%20address.%0A%20%20%20%20%20%2A%20-%20%60tokenId%60%20token%20must%20exist%20and%20be%20owned%20by%20%60from%60.%0A%20%20%20%20%20%2A%20-%20If%20the%20caller%20is%20not%20%60from%60%2C%20it%20must%20be%20approved%20to%20move%20this%20token%20by%20either%20%7Bapprove%7D%20or%20%7BsetApprovalForAll%7D.%0A%20%20%20%20%20%2A%20-%20If%20%60to%60%20refers%20to%20a%20smart%20contract%2C%20it%20must%20implement%20%7BIERC721Receiver-onERC721Received%7D%2C%20which%20is%20called%20upon%0A%20%20%20%20%20%2A%20%20%20a%20safe%20transfer.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Emits%20a%20%7BTransfer%7D%20event.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20safeTransferFrom%28address%20from%2C%20address%20to%2C%20uint256%20tokenId%2C%20bytes%20calldata%20data%29%20external%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Safely%20transfers%20%60tokenId%60%20token%20from%20%60from%60%20to%20%60to%60%2C%20checking%20first%20that%20contract%20recipients%0A%20%20%20%20%20%2A%20are%20aware%20of%20the%20ERC-721%20protocol%20to%20prevent%20tokens%20from%20being%20forever%20locked.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20%60from%60%20cannot%20be%20the%20zero%20address.%0A%20%20%20%20%20%2A%20-%20%60to%60%20cannot%20be%20the%20zero%20address.%0A%20%20%20%20%20%2A%20-%20%60tokenId%60%20token%20must%20exist%20and%20be%20owned%20by%20%60from%60.%0A%20%20%20%20%20%2A%20-%20If%20the%20caller%20is%20not%20%60from%60%2C%20it%20must%20have%20been%20allowed%20to%20move%20this%20token%20by%20either%20%7Bapprove%7D%20or%0A%20%20%20%20%20%2A%20%20%20%7BsetApprovalForAll%7D.%0A%20%20%20%20%20%2A%20-%20If%20%60to%60%20refers%20to%20a%20smart%20contract%2C%20it%20must%20implement%20%7BIERC721Receiver-onERC721Received%7D%2C%20which%20is%20called%20upon%0A%20%20%20%20%20%2A%20%20%20a%20safe%20transfer.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Emits%20a%20%7BTransfer%7D%20event.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20safeTransferFrom%28address%20from%2C%20address%20to%2C%20uint256%20tokenId%29%20external%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Transfers%20%60tokenId%60%20token%20from%20%60from%60%20to%20%60to%60.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20WARNING%3A%20Note%20that%20the%20caller%20is%20responsible%20to%20confirm%20that%20the%20recipient%20is%20capable%20of%20receiving%20ERC-721%0A%20%20%20%20%20%2A%20or%20else%20they%20may%20be%20permanently%20lost.%20Usage%20of%20%7BsafeTransferFrom%7D%20prevents%20loss%2C%20though%20the%20caller%20must%0A%20%20%20%20%20%2A%20understand%20this%20adds%20an%20external%20call%20which%20potentially%20creates%20a%20reentrancy%20vulnerability.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20%60from%60%20cannot%20be%20the%20zero%20address.%0A%20%20%20%20%20%2A%20-%20%60to%60%20cannot%20be%20the%20zero%20address.%0A%20%20%20%20%20%2A%20-%20%60tokenId%60%20token%20must%20be%20owned%20by%20%60from%60.%0A%20%20%20%20%20%2A%20-%20If%20the%20caller%20is%20not%20%60from%60%2C%20it%20must%20be%20approved%20to%20move%20this%20token%20by%20either%20%7Bapprove%7D%20or%20%7BsetApprovalForAll%7D.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Emits%20a%20%7BTransfer%7D%20event.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20transferFrom%28address%20from%2C%20address%20to%2C%20uint256%20tokenId%29%20external%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Gives%20permission%20to%20%60to%60%20to%20transfer%20%60tokenId%60%20token%20to%20another%20account.%0A%20%20%20%20%20%2A%20The%20approval%20is%20cleared%20when%20the%20token%20is%20transferred.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Only%20a%20single%20account%20can%20be%20approved%20at%20a%20time%2C%20so%20approving%20the%20zero%20address%20clears%20previous%20approvals.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20The%20caller%20must%20own%20the%20token%20or%20be%20an%20approved%20operator.%0A%20%20%20%20%20%2A%20-%20%60tokenId%60%20must%20exist.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Emits%20an%20%7BApproval%7D%20event.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20approve%28address%20to%2C%20uint256%20tokenId%29%20external%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Approve%20or%20remove%20%60operator%60%20as%20an%20operator%20for%20the%20caller.%0A%20%20%20%20%20%2A%20Operators%20can%20call%20%7BtransferFrom%7D%20or%20%7BsafeTransferFrom%7D%20for%20any%20token%20owned%20by%20the%20caller.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20The%20%60operator%60%20cannot%20be%20the%20address%20zero.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Emits%20an%20%7BApprovalForAll%7D%20event.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20setApprovalForAll%28address%20operator%2C%20bool%20approved%29%20external%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20account%20approved%20for%20%60tokenId%60%20token.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20%60tokenId%60%20must%20exist.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20getApproved%28uint256%20tokenId%29%20external%20view%20returns%20%28address%20operator%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20if%20the%20%60operator%60%20is%20allowed%20to%20manage%20all%20of%20the%20assets%20of%20%60owner%60.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20See%20%7BsetApprovalForAll%7D%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20isApprovedForAll%28address%20owner%2C%20address%20operator%29%20external%20view%20returns%20%28bool%29%3B%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Faccess%2FOwnable.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.0.0%29%20%28access%2FOwnable.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Contract%20module%20which%20provides%20a%20basic%20access%20control%20mechanism%2C%20where%0A%20%2A%20there%20is%20an%20account%20%28an%20owner%29%20that%20can%20be%20granted%20exclusive%20access%20to%0A%20%2A%20specific%20functions.%0A%20%2A%0A%20%2A%20The%20initial%20owner%20is%20set%20to%20the%20address%20provided%20by%20the%20deployer.%20This%20can%0A%20%2A%20later%20be%20changed%20with%20%7BtransferOwnership%7D.%0A%20%2A%0A%20%2A%20This%20module%20is%20used%20through%20inheritance.%20It%20will%20make%20available%20the%20modifier%0A%20%2A%20%60onlyOwner%60%2C%20which%20can%20be%20applied%20to%20your%20functions%20to%20restrict%20their%20use%20to%0A%20%2A%20the%20owner.%0A%20%2A%2F%0Aabstract%20contract%20Ownable%20is%20Context%20%7B%0A%20%20%20%20address%20private%20_owner%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20The%20caller%20account%20is%20not%20authorized%20to%20perform%20an%20operation.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20OwnableUnauthorizedAccount%28address%20account%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20The%20owner%20is%20not%20a%20valid%20owner%20account.%20%28eg.%20%60address%280%29%60%29%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20OwnableInvalidOwner%28address%20owner%29%3B%0A%0A%20%20%20%20event%20OwnershipTransferred%28address%20indexed%20previousOwner%2C%20address%20indexed%20newOwner%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Initializes%20the%20contract%20setting%20the%20address%20provided%20by%20the%20deployer%20as%20the%20initial%20owner.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20constructor%28address%20initialOwner%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28initialOwner%20%3D%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20OwnableInvalidOwner%28address%280%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20_transferOwnership%28initialOwner%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Throws%20if%20called%20by%20any%20account%20other%20than%20the%20owner.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20modifier%20onlyOwner%28%29%20%7B%0A%20%20%20%20%20%20%20%20_checkOwner%28%29%3B%0A%20%20%20%20%20%20%20%20_%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20address%20of%20the%20current%20owner.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20owner%28%29%20public%20view%20virtual%20returns%20%28address%29%20%7B%0A%20%20%20%20%20%20%20%20return%20_owner%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Throws%20if%20the%20sender%20is%20not%20the%20owner.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_checkOwner%28%29%20internal%20view%20virtual%20%7B%0A%20%20%20%20%20%20%20%20if%20%28owner%28%29%20%21%3D%20_msgSender%28%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20OwnableUnauthorizedAccount%28_msgSender%28%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Leaves%20the%20contract%20without%20owner.%20It%20will%20not%20be%20possible%20to%20call%0A%20%20%20%20%20%2A%20%60onlyOwner%60%20functions.%20Can%20only%20be%20called%20by%20the%20current%20owner.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20NOTE%3A%20Renouncing%20ownership%20will%20leave%20the%20contract%20without%20an%20owner%2C%0A%20%20%20%20%20%2A%20thereby%20disabling%20any%20functionality%20that%20is%20only%20available%20to%20the%20owner.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20renounceOwnership%28%29%20public%20virtual%20onlyOwner%20%7B%0A%20%20%20%20%20%20%20%20_transferOwnership%28address%280%29%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Transfers%20ownership%20of%20the%20contract%20to%20a%20new%20account%20%28%60newOwner%60%29.%0A%20%20%20%20%20%2A%20Can%20only%20be%20called%20by%20the%20current%20owner.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20transferOwnership%28address%20newOwner%29%20public%20virtual%20onlyOwner%20%7B%0A%20%20%20%20%20%20%20%20if%20%28newOwner%20%3D%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20OwnableInvalidOwner%28address%280%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20_transferOwnership%28newOwner%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Transfers%20ownership%20of%20the%20contract%20to%20a%20new%20account%20%28%60newOwner%60%29.%0A%20%20%20%20%20%2A%20Internal%20function%20without%20access%20restriction.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_transferOwnership%28address%20newOwner%29%20internal%20virtual%20%7B%0A%20%20%20%20%20%20%20%20address%20oldOwner%20%3D%20_owner%3B%0A%20%20%20%20%20%20%20%20_owner%20%3D%20newOwner%3B%0A%20%20%20%20%20%20%20%20emit%20OwnershipTransferred%28oldOwner%2C%20newOwner%29%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Futils%2Fmath%2FSignedMath.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.1.0%29%20%28utils%2Fmath%2FSignedMath.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Standard%20signed%20math%20utilities%20missing%20in%20the%20Solidity%20language.%0A%20%2A%2F%0Alibrary%20SignedMath%20%7B%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Branchless%20ternary%20evaluation%20for%20%60a%20%3F%20b%20%3A%20c%60.%20Gas%20costs%20are%20constant.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20IMPORTANT%3A%20This%20function%20may%20reduce%20bytecode%20size%20and%20consume%20less%20gas%20when%20used%20standalone.%0A%20%20%20%20%20%2A%20However%2C%20the%20compiler%20may%20optimize%20Solidity%20ternary%20operations%20%28i.e.%20%60a%20%3F%20b%20%3A%20c%60%29%20to%20only%20compute%0A%20%20%20%20%20%2A%20one%20branch%20when%20needed%2C%20making%20this%20function%20more%20expensive.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20ternary%28bool%20condition%2C%20int256%20a%2C%20int256%20b%29%20internal%20pure%20returns%20%28int256%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20branchless%20ternary%20works%20because%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20b%20%5E%20%28a%20%5E%20b%29%20%3D%3D%20a%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20b%20%5E%200%20%3D%3D%20b%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20b%20%5E%20%28%28a%20%5E%20b%29%20%2A%20int256%28SafeCast.toUint%28condition%29%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20largest%20of%20two%20signed%20numbers.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20max%28int256%20a%2C%20int256%20b%29%20internal%20pure%20returns%20%28int256%29%20%7B%0A%20%20%20%20%20%20%20%20return%20ternary%28a%20%3E%20b%2C%20a%2C%20b%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20smallest%20of%20two%20signed%20numbers.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20min%28int256%20a%2C%20int256%20b%29%20internal%20pure%20returns%20%28int256%29%20%7B%0A%20%20%20%20%20%20%20%20return%20ternary%28a%20%3C%20b%2C%20a%2C%20b%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20average%20of%20two%20signed%20numbers%20without%20overflow.%0A%20%20%20%20%20%2A%20The%20result%20is%20rounded%20towards%20zero.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20average%28int256%20a%2C%20int256%20b%29%20internal%20pure%20returns%20%28int256%29%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Formula%20from%20the%20book%20%22Hacker%27s%20Delight%22%0A%20%20%20%20%20%20%20%20int256%20x%20%3D%20%28a%20%26%20b%29%20%2B%20%28%28a%20%5E%20b%29%20%3E%3E%201%29%3B%0A%20%20%20%20%20%20%20%20return%20x%20%2B%20%28int256%28uint256%28x%29%20%3E%3E%20255%29%20%26%20%28a%20%5E%20b%29%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20absolute%20unsigned%20value%20of%20a%20signed%20value.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20abs%28int256%20n%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Formula%20from%20the%20%22Bit%20Twiddling%20Hacks%22%20by%20Sean%20Eron%20Anderson.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Since%20%60n%60%20is%20a%20signed%20integer%2C%20the%20generated%20bytecode%20will%20use%20the%20SAR%20opcode%20to%20perform%20the%20right%20shift%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20taking%20advantage%20of%20the%20most%20significant%20%28or%20%22sign%22%20bit%29%20in%20two%27s%20complement%20representation.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20This%20opcode%20adds%20new%20most%20significant%20bits%20set%20to%20the%20value%20of%20the%20previous%20most%20significant%20bit.%20As%20a%20result%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20the%20mask%20will%20either%20be%20%60bytes32%280%29%60%20%28if%20n%20is%20positive%29%20or%20%60~bytes32%280%29%60%20%28if%20n%20is%20negative%29.%0A%20%20%20%20%20%20%20%20%20%20%20%20int256%20mask%20%3D%20n%20%3E%3E%20255%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20A%20%60bytes32%280%29%60%20mask%20leaves%20the%20input%20unchanged%2C%20while%20a%20%60~bytes32%280%29%60%20mask%20complements%20it.%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20uint256%28%28n%20%2B%20mask%29%20%5E%20mask%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Ftoken%2FERC721%2Futils%2FERC721Utils.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.4.0%29%20%28token%2FERC721%2Futils%2FERC721Utils.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Library%20that%20provide%20common%20ERC-721%20utility%20functions.%0A%20%2A%0A%20%2A%20See%20https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-721%5BERC-721%5D.%0A%20%2A%0A%20%2A%20_Available%20since%20v5.1._%0A%20%2A%2F%0Alibrary%20ERC721Utils%20%7B%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Performs%20an%20acceptance%20check%20for%20the%20provided%20%60operator%60%20by%20calling%20%7BIERC721Receiver-onERC721Received%7D%0A%20%20%20%20%20%2A%20on%20the%20%60to%60%20address.%20The%20%60operator%60%20is%20generally%20the%20address%20that%20initiated%20the%20token%20transfer%20%28i.e.%20%60msg.sender%60%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20The%20acceptance%20call%20is%20not%20executed%20and%20treated%20as%20a%20no-op%20if%20the%20target%20address%20doesn%27t%20contain%20code%20%28i.e.%20an%20EOA%29.%0A%20%20%20%20%20%2A%20Otherwise%2C%20the%20recipient%20must%20implement%20%7BIERC721Receiver-onERC721Received%7D%20and%20return%20the%20acceptance%20magic%20value%20to%20accept%0A%20%20%20%20%20%2A%20the%20transfer.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20checkOnERC721Received%28%0A%20%20%20%20%20%20%20%20address%20operator%2C%0A%20%20%20%20%20%20%20%20address%20from%2C%0A%20%20%20%20%20%20%20%20address%20to%2C%0A%20%20%20%20%20%20%20%20uint256%20tokenId%2C%0A%20%20%20%20%20%20%20%20bytes%20memory%20data%0A%20%20%20%20%29%20internal%20%7B%0A%20%20%20%20%20%20%20%20if%20%28to.code.length%20%3E%200%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20try%20IERC721Receiver%28to%29.onERC721Received%28operator%2C%20from%2C%20tokenId%2C%20data%29%20returns%20%28bytes4%20retval%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28retval%20%21%3D%20IERC721Receiver.onERC721Received.selector%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Token%20rejected%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20revert%20IERC721Errors.ERC721InvalidReceiver%28to%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20catch%20%28bytes%20memory%20reason%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28reason.length%20%3D%3D%200%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20non-IERC721Receiver%20implementer%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20revert%20IERC721Errors.ERC721InvalidReceiver%28to%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20revert%28add%28reason%2C%200x20%29%2C%20mload%28reason%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Ftoken%2FERC721%2Fextensions%2FIERC721Metadata.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.4.0%29%20%28token%2FERC721%2Fextensions%2FIERC721Metadata.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40title%20ERC-721%20Non-Fungible%20Token%20Standard%2C%20optional%20metadata%20extension%0A%20%2A%20%40dev%20See%20https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-721%0A%20%2A%2F%0Ainterface%20IERC721Metadata%20is%20IERC721%20%7B%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20token%20collection%20name.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20name%28%29%20external%20view%20returns%20%28string%20memory%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20token%20collection%20symbol.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20symbol%28%29%20external%20view%20returns%20%28string%20memory%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20Uniform%20Resource%20Identifier%20%28URI%29%20for%20%60tokenId%60%20token.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tokenURI%28uint256%20tokenId%29%20external%20view%20returns%20%28string%20memory%29%3B%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Futils%2Fmath%2FMath.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.3.0%29%20%28utils%2Fmath%2FMath.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Standard%20math%20utilities%20missing%20in%20the%20Solidity%20language.%0A%20%2A%2F%0Alibrary%20Math%20%7B%0A%20%20%20%20enum%20Rounding%20%7B%0A%20%20%20%20%20%20%20%20Floor%2C%20%2F%2F%20Toward%20negative%20infinity%0A%20%20%20%20%20%20%20%20Ceil%2C%20%2F%2F%20Toward%20positive%20infinity%0A%20%20%20%20%20%20%20%20Trunc%2C%20%2F%2F%20Toward%20zero%0A%20%20%20%20%20%20%20%20Expand%20%2F%2F%20Away%20from%20zero%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Return%20the%20512-bit%20addition%20of%20two%20uint256.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20The%20result%20is%20stored%20in%20two%20256%20variables%20such%20that%20sum%20%3D%20high%20%2A%202%C2%B2%E2%81%B5%E2%81%B6%20%2B%20low.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20add512%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28uint256%20high%2C%20uint256%20low%29%20%7B%0A%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20low%20%3A%3D%20add%28a%2C%20b%29%0A%20%20%20%20%20%20%20%20%20%20%20%20high%20%3A%3D%20lt%28low%2C%20a%29%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Return%20the%20512-bit%20multiplication%20of%20two%20uint256.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20The%20result%20is%20stored%20in%20two%20256%20variables%20such%20that%20product%20%3D%20high%20%2A%202%C2%B2%E2%81%B5%E2%81%B6%20%2B%20low.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20mul512%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28uint256%20high%2C%20uint256%20low%29%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20512-bit%20multiply%20%5Bhigh%20low%5D%20%3D%20x%20%2A%20y.%20Compute%20the%20product%20mod%202%C2%B2%E2%81%B5%E2%81%B6%20and%20mod%202%C2%B2%E2%81%B5%E2%81%B6%20-%201%2C%20then%20use%0A%20%20%20%20%20%20%20%20%2F%2F%20the%20Chinese%20Remainder%20Theorem%20to%20reconstruct%20the%20512%20bit%20result.%20The%20result%20is%20stored%20in%20two%20256%0A%20%20%20%20%20%20%20%20%2F%2F%20variables%20such%20that%20product%20%3D%20high%20%2A%202%C2%B2%E2%81%B5%E2%81%B6%20%2B%20low.%0A%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20mm%20%3A%3D%20mulmod%28a%2C%20b%2C%20not%280%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20low%20%3A%3D%20mul%28a%2C%20b%29%0A%20%20%20%20%20%20%20%20%20%20%20%20high%20%3A%3D%20sub%28sub%28mm%2C%20low%29%2C%20lt%28mm%2C%20low%29%29%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20addition%20of%20two%20unsigned%20integers%2C%20with%20a%20success%20flag%20%28no%20overflow%29.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryAdd%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28bool%20success%2C%20uint256%20result%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20c%20%3D%20a%20%2B%20b%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20success%20%3D%20c%20%3E%3D%20a%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20result%20%3D%20c%20%2A%20SafeCast.toUint%28success%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20subtraction%20of%20two%20unsigned%20integers%2C%20with%20a%20success%20flag%20%28no%20overflow%29.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20trySub%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28bool%20success%2C%20uint256%20result%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20c%20%3D%20a%20-%20b%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20success%20%3D%20c%20%3C%3D%20a%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20result%20%3D%20c%20%2A%20SafeCast.toUint%28success%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20multiplication%20of%20two%20unsigned%20integers%2C%20with%20a%20success%20flag%20%28no%20overflow%29.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryMul%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28bool%20success%2C%20uint256%20result%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20c%20%3D%20a%20%2A%20b%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Only%20true%20when%20the%20multiplication%20doesn%27t%20overflow%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%28c%20%2F%20a%20%3D%3D%20b%29%20%7C%7C%20%28a%20%3D%3D%200%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20success%20%3A%3D%20or%28eq%28div%28c%2C%20a%29%2C%20b%29%2C%20iszero%28a%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20equivalent%20to%3A%20success%20%3F%20c%20%3A%200%0A%20%20%20%20%20%20%20%20%20%20%20%20result%20%3D%20c%20%2A%20SafeCast.toUint%28success%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20division%20of%20two%20unsigned%20integers%2C%20with%20a%20success%20flag%20%28no%20division%20by%20zero%29.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryDiv%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28bool%20success%2C%20uint256%20result%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20success%20%3D%20b%20%3E%200%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20The%20%60DIV%60%20opcode%20returns%20zero%20when%20the%20denominator%20is%200.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result%20%3A%3D%20div%28a%2C%20b%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20remainder%20of%20dividing%20two%20unsigned%20integers%2C%20with%20a%20success%20flag%20%28no%20division%20by%20zero%29.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryMod%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28bool%20success%2C%20uint256%20result%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20success%20%3D%20b%20%3E%200%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20The%20%60MOD%60%20opcode%20returns%20zero%20when%20the%20denominator%20is%200.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result%20%3A%3D%20mod%28a%2C%20b%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Unsigned%20saturating%20addition%2C%20bounds%20to%20%602%C2%B2%E2%81%B5%E2%81%B6%20-%201%60%20instead%20of%20overflowing.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20saturatingAdd%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20%28bool%20success%2C%20uint256%20result%29%20%3D%20tryAdd%28a%2C%20b%29%3B%0A%20%20%20%20%20%20%20%20return%20ternary%28success%2C%20result%2C%20type%28uint256%29.max%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Unsigned%20saturating%20subtraction%2C%20bounds%20to%20zero%20instead%20of%20overflowing.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20saturatingSub%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20%28%2C%20uint256%20result%29%20%3D%20trySub%28a%2C%20b%29%3B%0A%20%20%20%20%20%20%20%20return%20result%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Unsigned%20saturating%20multiplication%2C%20bounds%20to%20%602%C2%B2%E2%81%B5%E2%81%B6%20-%201%60%20instead%20of%20overflowing.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20saturatingMul%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20%28bool%20success%2C%20uint256%20result%29%20%3D%20tryMul%28a%2C%20b%29%3B%0A%20%20%20%20%20%20%20%20return%20ternary%28success%2C%20result%2C%20type%28uint256%29.max%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Branchless%20ternary%20evaluation%20for%20%60a%20%3F%20b%20%3A%20c%60.%20Gas%20costs%20are%20constant.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20IMPORTANT%3A%20This%20function%20may%20reduce%20bytecode%20size%20and%20consume%20less%20gas%20when%20used%20standalone.%0A%20%20%20%20%20%2A%20However%2C%20the%20compiler%20may%20optimize%20Solidity%20ternary%20operations%20%28i.e.%20%60a%20%3F%20b%20%3A%20c%60%29%20to%20only%20compute%0A%20%20%20%20%20%2A%20one%20branch%20when%20needed%2C%20making%20this%20function%20more%20expensive.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20ternary%28bool%20condition%2C%20uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20branchless%20ternary%20works%20because%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20b%20%5E%20%28a%20%5E%20b%29%20%3D%3D%20a%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20b%20%5E%200%20%3D%3D%20b%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20b%20%5E%20%28%28a%20%5E%20b%29%20%2A%20SafeCast.toUint%28condition%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20largest%20of%20two%20numbers.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20max%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20return%20ternary%28a%20%3E%20b%2C%20a%2C%20b%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20smallest%20of%20two%20numbers.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20min%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20return%20ternary%28a%20%3C%20b%2C%20a%2C%20b%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20average%20of%20two%20numbers.%20The%20result%20is%20rounded%20towards%0A%20%20%20%20%20%2A%20zero.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20average%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20%28a%20%2B%20b%29%20%2F%202%20can%20overflow.%0A%20%20%20%20%20%20%20%20return%20%28a%20%26%20b%29%20%2B%20%28a%20%5E%20b%29%20%2F%202%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20ceiling%20of%20the%20division%20of%20two%20numbers.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20This%20differs%20from%20standard%20division%20with%20%60%2F%60%20in%20that%20it%20rounds%20towards%20infinity%20instead%0A%20%20%20%20%20%2A%20of%20rounding%20towards%20zero.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20ceilDiv%28uint256%20a%2C%20uint256%20b%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28b%20%3D%3D%200%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Guarantee%20the%20same%20behavior%20as%20in%20a%20regular%20Solidity%20division.%0A%20%20%20%20%20%20%20%20%20%20%20%20Panic.panic%28Panic.DIVISION_BY_ZERO%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20The%20following%20calculation%20ensures%20accurate%20ceiling%20division%20without%20overflow.%0A%20%20%20%20%20%20%20%20%2F%2F%20Since%20a%20is%20non-zero%2C%20%28a%20-%201%29%20%2F%20b%20will%20not%20overflow.%0A%20%20%20%20%20%20%20%20%2F%2F%20The%20largest%20possible%20result%20occurs%20when%20%28a%20-%201%29%20%2F%20b%20is%20type%28uint256%29.max%2C%0A%20%20%20%20%20%20%20%20%2F%2F%20but%20the%20largest%20value%20we%20can%20obtain%20is%20type%28uint256%29.max%20-%201%2C%20which%20happens%0A%20%20%20%20%20%20%20%20%2F%2F%20when%20a%20%3D%20type%28uint256%29.max%20and%20b%20%3D%201.%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20SafeCast.toUint%28a%20%3E%200%29%20%2A%20%28%28a%20-%201%29%20%2F%20b%20%2B%201%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Calculates%20floor%28x%20%2A%20y%20%2F%20denominator%29%20with%20full%20precision.%20Throws%20if%20result%20overflows%20a%20uint256%20or%0A%20%20%20%20%20%2A%20denominator%20%3D%3D%200.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Original%20credit%20to%20Remco%20Bloemen%20under%20MIT%20license%20%28https%3A%2F%2Fxn--2-umb.com%2F21%2Fmuldiv%29%20with%20further%20edits%20by%0A%20%20%20%20%20%2A%20Uniswap%20Labs%20also%20under%20MIT%20license.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20mulDiv%28uint256%20x%2C%20uint256%20y%2C%20uint256%20denominator%29%20internal%20pure%20returns%20%28uint256%20result%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%28uint256%20high%2C%20uint256%20low%29%20%3D%20mul512%28x%2C%20y%29%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Handle%20non-overflow%20cases%2C%20256%20by%20256%20division.%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28high%20%3D%3D%200%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Solidity%20will%20revert%20if%20denominator%20%3D%3D%200%2C%20unlike%20the%20div%20opcode%20on%20its%20own.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20The%20surrounding%20unchecked%20block%20does%20not%20change%20this%20fact.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20See%20https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fcontrol-structures.html%23checked-or-unchecked-arithmetic.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20low%20%2F%20denominator%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Make%20sure%20the%20result%20is%20less%20than%202%C2%B2%E2%81%B5%E2%81%B6.%20Also%20prevents%20denominator%20%3D%3D%200.%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28denominator%20%3C%3D%20high%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Panic.panic%28ternary%28denominator%20%3D%3D%200%2C%20Panic.DIVISION_BY_ZERO%2C%20Panic.UNDER_OVERFLOW%29%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20512%20by%20256%20division.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Make%20division%20exact%20by%20subtracting%20the%20remainder%20from%20%5Bhigh%20low%5D.%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20remainder%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Compute%20remainder%20using%20mulmod.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20remainder%20%3A%3D%20mulmod%28x%2C%20y%2C%20denominator%29%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Subtract%20256%20bit%20number%20from%20512%20bit%20number.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20high%20%3A%3D%20sub%28high%2C%20gt%28remainder%2C%20low%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20low%20%3A%3D%20sub%28low%2C%20remainder%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Factor%20powers%20of%20two%20out%20of%20denominator%20and%20compute%20largest%20power%20of%20two%20divisor%20of%20denominator.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Always%20%3E%3D%201.%20See%20https%3A%2F%2Fcs.stackexchange.com%2Fq%2F138556%2F92363.%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20twos%20%3D%20denominator%20%26%20%280%20-%20denominator%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Divide%20denominator%20by%20twos.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20denominator%20%3A%3D%20div%28denominator%2C%20twos%29%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Divide%20%5Bhigh%20low%5D%20by%20twos.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20low%20%3A%3D%20div%28low%2C%20twos%29%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Flip%20twos%20such%20that%20it%20is%202%C2%B2%E2%81%B5%E2%81%B6%20%2F%20twos.%20If%20twos%20is%20zero%2C%20then%20it%20becomes%20one.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20twos%20%3A%3D%20add%28div%28sub%280%2C%20twos%29%2C%20twos%29%2C%201%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Shift%20in%20bits%20from%20high%20into%20low.%0A%20%20%20%20%20%20%20%20%20%20%20%20low%20%7C%3D%20high%20%2A%20twos%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Invert%20denominator%20mod%202%C2%B2%E2%81%B5%E2%81%B6.%20Now%20that%20denominator%20is%20an%20odd%20number%2C%20it%20has%20an%20inverse%20modulo%202%C2%B2%E2%81%B5%E2%81%B6%20such%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20that%20denominator%20%2A%20inv%20%E2%89%A1%201%20mod%202%C2%B2%E2%81%B5%E2%81%B6.%20Compute%20the%20inverse%20by%20starting%20with%20a%20seed%20that%20is%20correct%20for%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20four%20bits.%20That%20is%2C%20denominator%20%2A%20inv%20%E2%89%A1%201%20mod%202%E2%81%B4.%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20inverse%20%3D%20%283%20%2A%20denominator%29%20%5E%202%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Use%20the%20Newton-Raphson%20iteration%20to%20improve%20the%20precision.%20Thanks%20to%20Hensel%27s%20lifting%20lemma%2C%20this%20also%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20works%20in%20modular%20arithmetic%2C%20doubling%20the%20correct%20bits%20in%20each%20step.%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%20%2A%3D%202%20-%20denominator%20%2A%20inverse%3B%20%2F%2F%20inverse%20mod%202%E2%81%B8%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%20%2A%3D%202%20-%20denominator%20%2A%20inverse%3B%20%2F%2F%20inverse%20mod%202%C2%B9%E2%81%B6%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%20%2A%3D%202%20-%20denominator%20%2A%20inverse%3B%20%2F%2F%20inverse%20mod%202%C2%B3%C2%B2%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%20%2A%3D%202%20-%20denominator%20%2A%20inverse%3B%20%2F%2F%20inverse%20mod%202%E2%81%B6%E2%81%B4%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%20%2A%3D%202%20-%20denominator%20%2A%20inverse%3B%20%2F%2F%20inverse%20mod%202%C2%B9%C2%B2%E2%81%B8%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%20%2A%3D%202%20-%20denominator%20%2A%20inverse%3B%20%2F%2F%20inverse%20mod%202%C2%B2%E2%81%B5%E2%81%B6%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Because%20the%20division%20is%20now%20exact%20we%20can%20divide%20by%20multiplying%20with%20the%20modular%20inverse%20of%20denominator.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20This%20will%20give%20us%20the%20correct%20result%20modulo%202%C2%B2%E2%81%B5%E2%81%B6.%20Since%20the%20preconditions%20guarantee%20that%20the%20outcome%20is%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20less%20than%202%C2%B2%E2%81%B5%E2%81%B6%2C%20this%20is%20the%20final%20result.%20We%20don%27t%20need%20to%20compute%20the%20high%20bits%20of%20the%20result%20and%20high%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20is%20no%20longer%20required.%0A%20%20%20%20%20%20%20%20%20%20%20%20result%20%3D%20low%20%2A%20inverse%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20result%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Calculates%20x%20%2A%20y%20%2F%20denominator%20with%20full%20precision%2C%20following%20the%20selected%20rounding%20direction.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20mulDiv%28uint256%20x%2C%20uint256%20y%2C%20uint256%20denominator%2C%20Rounding%20rounding%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20return%20mulDiv%28x%2C%20y%2C%20denominator%29%20%2B%20SafeCast.toUint%28unsignedRoundsUp%28rounding%29%20%26%26%20mulmod%28x%2C%20y%2C%20denominator%29%20%3E%200%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Calculates%20floor%28x%20%2A%20y%20%3E%3E%20n%29%20with%20full%20precision.%20Throws%20if%20result%20overflows%20a%20uint256.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20mulShr%28uint256%20x%2C%20uint256%20y%2C%20uint8%20n%29%20internal%20pure%20returns%20%28uint256%20result%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%28uint256%20high%2C%20uint256%20low%29%20%3D%20mul512%28x%2C%20y%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28high%20%3E%3D%201%20%3C%3C%20n%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Panic.panic%28Panic.UNDER_OVERFLOW%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%28high%20%3C%3C%20%28256%20-%20n%29%29%20%7C%20%28low%20%3E%3E%20n%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Calculates%20x%20%2A%20y%20%3E%3E%20n%20with%20full%20precision%2C%20following%20the%20selected%20rounding%20direction.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20mulShr%28uint256%20x%2C%20uint256%20y%2C%20uint8%20n%2C%20Rounding%20rounding%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20return%20mulShr%28x%2C%20y%2C%20n%29%20%2B%20SafeCast.toUint%28unsignedRoundsUp%28rounding%29%20%26%26%20mulmod%28x%2C%20y%2C%201%20%3C%3C%20n%29%20%3E%200%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Calculate%20the%20modular%20multiplicative%20inverse%20of%20a%20number%20in%20Z%2FnZ.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20If%20n%20is%20a%20prime%2C%20then%20Z%2FnZ%20is%20a%20field.%20In%20that%20case%20all%20elements%20are%20inversible%2C%20except%200.%0A%20%20%20%20%20%2A%20If%20n%20is%20not%20a%20prime%2C%20then%20Z%2FnZ%20is%20not%20a%20field%2C%20and%20some%20elements%20might%20not%20be%20inversible.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20If%20the%20input%20value%20is%20not%20inversible%2C%200%20is%20returned.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20NOTE%3A%20If%20you%20know%20for%20sure%20that%20n%20is%20%28big%29%20a%20prime%2C%20it%20may%20be%20cheaper%20to%20use%20Fermat%27s%20little%20theorem%20and%20get%20the%0A%20%20%20%20%20%2A%20inverse%20using%20%60Math.modExp%28a%2C%20n%20-%202%2C%20n%29%60.%20See%20%7BinvModPrime%7D.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20invMod%28uint256%20a%2C%20uint256%20n%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28n%20%3D%3D%200%29%20return%200%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20The%20inverse%20modulo%20is%20calculated%20using%20the%20Extended%20Euclidean%20Algorithm%20%28iterative%20version%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Used%20to%20compute%20integers%20x%20and%20y%20such%20that%3A%20ax%20%2B%20ny%20%3D%20gcd%28a%2C%20n%29.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20When%20the%20gcd%20is%201%2C%20then%20the%20inverse%20of%20a%20modulo%20n%20exists%20and%20it%27s%20x.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20ax%20%2B%20ny%20%3D%201%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20ax%20%3D%201%20%2B%20%28-y%29n%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20ax%20%E2%89%A1%201%20%28mod%20n%29%20%23%20x%20is%20the%20inverse%20of%20a%20modulo%20n%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20If%20the%20remainder%20is%200%20the%20gcd%20is%20n%20right%20away.%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20remainder%20%3D%20a%20%25%20n%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20gcd%20%3D%20n%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Therefore%20the%20initial%20coefficients%20are%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20ax%20%2B%20ny%20%3D%20gcd%28a%2C%20n%29%20%3D%20n%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%200a%20%2B%201n%20%3D%20n%0A%20%20%20%20%20%20%20%20%20%20%20%20int256%20x%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20int256%20y%20%3D%201%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20while%20%28remainder%20%21%3D%200%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20uint256%20quotient%20%3D%20gcd%20%2F%20remainder%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%28gcd%2C%20remainder%29%20%3D%20%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20The%20old%20remainder%20is%20the%20next%20gcd%20to%20try.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20remainder%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Compute%20the%20next%20remainder.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Can%27t%20overflow%20given%20that%20%28a%20%25%20gcd%29%20%2A%20%28gcd%20%2F%2F%20%28a%20%25%20gcd%29%29%20%3C%3D%20gcd%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20where%20gcd%20is%20at%20most%20n%20%28capped%20to%20type%28uint256%29.max%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20gcd%20-%20remainder%20%2A%20quotient%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%29%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%28x%2C%20y%29%20%3D%20%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Increment%20the%20coefficient%20of%20a.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20y%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Decrement%20the%20coefficient%20of%20n.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Can%20overflow%2C%20but%20the%20result%20is%20casted%20to%20uint256%20so%20that%20the%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20next%20value%20of%20y%20is%20%22wrapped%20around%22%20to%20a%20value%20between%200%20and%20n%20-%201.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20x%20-%20y%20%2A%20int256%28quotient%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28gcd%20%21%3D%201%29%20return%200%3B%20%2F%2F%20No%20inverse%20exists.%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20ternary%28x%20%3C%200%2C%20n%20-%20uint256%28-x%29%2C%20uint256%28x%29%29%3B%20%2F%2F%20Wrap%20the%20result%20if%20it%27s%20negative.%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BinvMod%7D.%20More%20efficient%2C%20but%20only%20works%20if%20%60p%60%20is%20known%20to%20be%20a%20prime%20greater%20than%20%602%60.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20From%20https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FFermat%2527s_little_theorem%5BFermat%27s%20little%20theorem%5D%2C%20we%20know%20that%20if%20p%20is%0A%20%20%20%20%20%2A%20prime%2C%20then%20%60a%2A%2A%28p-1%29%20%E2%89%A1%201%20mod%20p%60.%20As%20a%20consequence%2C%20we%20have%20%60a%20%2A%20a%2A%2A%28p-2%29%20%E2%89%A1%201%20mod%20p%60%2C%20which%20means%20that%0A%20%20%20%20%20%2A%20%60a%2A%2A%28p-2%29%60%20is%20the%20modular%20multiplicative%20inverse%20of%20a%20in%20Fp.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20NOTE%3A%20this%20function%20does%20NOT%20check%20that%20%60p%60%20is%20a%20prime%20greater%20than%20%602%60.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20invModPrime%28uint256%20a%2C%20uint256%20p%29%20internal%20view%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Math.modExp%28a%2C%20p%20-%202%2C%20p%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20modular%20exponentiation%20of%20the%20specified%20base%2C%20exponent%20and%20modulus%20%28b%20%2A%2A%20e%20%25%20m%29%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%20-%20modulus%20can%27t%20be%20zero%0A%20%20%20%20%20%2A%20-%20underlying%20staticcall%20to%20precompile%20must%20succeed%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20IMPORTANT%3A%20The%20result%20is%20only%20valid%20if%20the%20underlying%20call%20succeeds.%20When%20using%20this%20function%2C%20make%0A%20%20%20%20%20%2A%20sure%20the%20chain%20you%27re%20using%20it%20on%20supports%20the%20precompiled%20contract%20for%20modular%20exponentiation%0A%20%20%20%20%20%2A%20at%20address%200x05%20as%20specified%20in%20https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-198%5BEIP-198%5D.%20Otherwise%2C%0A%20%20%20%20%20%2A%20the%20underlying%20function%20will%20succeed%20given%20the%20lack%20of%20a%20revert%2C%20but%20the%20result%20may%20be%20incorrectly%0A%20%20%20%20%20%2A%20interpreted%20as%200.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20modExp%28uint256%20b%2C%20uint256%20e%2C%20uint256%20m%29%20internal%20view%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20%28bool%20success%2C%20uint256%20result%29%20%3D%20tryModExp%28b%2C%20e%2C%20m%29%3B%0A%20%20%20%20%20%20%20%20if%20%28%21success%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20Panic.panic%28Panic.DIVISION_BY_ZERO%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20result%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20modular%20exponentiation%20of%20the%20specified%20base%2C%20exponent%20and%20modulus%20%28b%20%2A%2A%20e%20%25%20m%29.%0A%20%20%20%20%20%2A%20It%20includes%20a%20success%20flag%20indicating%20if%20the%20operation%20succeeded.%20Operation%20will%20be%20marked%20as%20failed%20if%20trying%0A%20%20%20%20%20%2A%20to%20operate%20modulo%200%20or%20if%20the%20underlying%20precompile%20reverted.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20IMPORTANT%3A%20The%20result%20is%20only%20valid%20if%20the%20success%20flag%20is%20true.%20When%20using%20this%20function%2C%20make%20sure%20the%20chain%0A%20%20%20%20%20%2A%20you%27re%20using%20it%20on%20supports%20the%20precompiled%20contract%20for%20modular%20exponentiation%20at%20address%200x05%20as%20specified%20in%0A%20%20%20%20%20%2A%20https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-198%5BEIP-198%5D.%20Otherwise%2C%20the%20underlying%20function%20will%20succeed%20given%20the%20lack%0A%20%20%20%20%20%2A%20of%20a%20revert%2C%20but%20the%20result%20may%20be%20incorrectly%20interpreted%20as%200.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryModExp%28uint256%20b%2C%20uint256%20e%2C%20uint256%20m%29%20internal%20view%20returns%20%28bool%20success%2C%20uint256%20result%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28m%20%3D%3D%200%29%20return%20%28false%2C%200%29%3B%0A%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20ptr%20%3A%3D%20mload%280x40%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%7C%20Offset%20%20%20%20%7C%20Content%20%20%20%20%7C%20Content%20%28Hex%29%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%7C-----------%7C------------%7C--------------------------------------------------------------------%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%7C%200x00%3A0x1f%20%7C%20size%20of%20b%20%20%7C%200x0000000000000000000000000000000000000000000000000000000000000020%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%7C%200x20%3A0x3f%20%7C%20size%20of%20e%20%20%7C%200x0000000000000000000000000000000000000000000000000000000000000020%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%7C%200x40%3A0x5f%20%7C%20size%20of%20m%20%20%7C%200x0000000000000000000000000000000000000000000000000000000000000020%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%7C%200x60%3A0x7f%20%7C%20value%20of%20b%20%7C%200x%3C.............................................................b%3E%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%7C%200x80%3A0x9f%20%7C%20value%20of%20e%20%7C%200x%3C.............................................................e%3E%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%7C%200xa0%3A0xbf%20%7C%20value%20of%20m%20%7C%200x%3C.............................................................m%3E%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore%28ptr%2C%200x20%29%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore%28add%28ptr%2C%200x20%29%2C%200x20%29%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore%28add%28ptr%2C%200x40%29%2C%200x20%29%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore%28add%28ptr%2C%200x60%29%2C%20b%29%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore%28add%28ptr%2C%200x80%29%2C%20e%29%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore%28add%28ptr%2C%200xa0%29%2C%20m%29%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Given%20the%20result%20%3C%20m%2C%20it%27s%20guaranteed%20to%20fit%20in%2032%20bytes%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20so%20we%20can%20use%20the%20memory%20scratch%20space%20located%20at%20offset%200.%0A%20%20%20%20%20%20%20%20%20%20%20%20success%20%3A%3D%20staticcall%28gas%28%29%2C%200x05%2C%20ptr%2C%200xc0%2C%200x00%2C%200x20%29%0A%20%20%20%20%20%20%20%20%20%20%20%20result%20%3A%3D%20mload%280x00%29%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BmodExp%7D%20that%20supports%20inputs%20of%20arbitrary%20length.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20modExp%28bytes%20memory%20b%2C%20bytes%20memory%20e%2C%20bytes%20memory%20m%29%20internal%20view%20returns%20%28bytes%20memory%29%20%7B%0A%20%20%20%20%20%20%20%20%28bool%20success%2C%20bytes%20memory%20result%29%20%3D%20tryModExp%28b%2C%20e%2C%20m%29%3B%0A%20%20%20%20%20%20%20%20if%20%28%21success%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20Panic.panic%28Panic.DIVISION_BY_ZERO%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20result%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BtryModExp%7D%20that%20supports%20inputs%20of%20arbitrary%20length.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryModExp%28%0A%20%20%20%20%20%20%20%20bytes%20memory%20b%2C%0A%20%20%20%20%20%20%20%20bytes%20memory%20e%2C%0A%20%20%20%20%20%20%20%20bytes%20memory%20m%0A%20%20%20%20%29%20internal%20view%20returns%20%28bool%20success%2C%20bytes%20memory%20result%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28_zeroBytes%28m%29%29%20return%20%28false%2C%20new%20bytes%280%29%29%3B%0A%0A%20%20%20%20%20%20%20%20uint256%20mLen%20%3D%20m.length%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Encode%20call%20args%20in%20result%20and%20move%20the%20free%20memory%20pointer%0A%20%20%20%20%20%20%20%20result%20%3D%20abi.encodePacked%28b.length%2C%20e.length%2C%20mLen%2C%20b%2C%20e%2C%20m%29%3B%0A%0A%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20dataPtr%20%3A%3D%20add%28result%2C%200x20%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Write%20result%20on%20top%20of%20args%20to%20avoid%20allocating%20extra%20memory.%0A%20%20%20%20%20%20%20%20%20%20%20%20success%20%3A%3D%20staticcall%28gas%28%29%2C%200x05%2C%20dataPtr%2C%20mload%28result%29%2C%20dataPtr%2C%20mLen%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Overwrite%20the%20length.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20result.length%20%3E%20returndatasize%28%29%20is%20guaranteed%20because%20returndatasize%28%29%20%3D%3D%20m.length%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore%28result%2C%20mLen%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Set%20the%20memory%20pointer%20after%20the%20returned%20data.%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore%280x40%2C%20add%28dataPtr%2C%20mLen%29%29%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20whether%20the%20provided%20byte%20array%20is%20zero.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_zeroBytes%28bytes%20memory%20byteArray%29%20private%20pure%20returns%20%28bool%29%20%7B%0A%20%20%20%20%20%20%20%20for%20%28uint256%20i%20%3D%200%3B%20i%20%3C%20byteArray.length%3B%20%2B%2Bi%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28byteArray%5Bi%5D%20%21%3D%200%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20false%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20true%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20square%20root%20of%20a%20number.%20If%20the%20number%20is%20not%20a%20perfect%20square%2C%20the%20value%20is%20rounded%0A%20%20%20%20%20%2A%20towards%20zero.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20This%20method%20is%20based%20on%20Newton%27s%20method%20for%20computing%20square%20roots%3B%20the%20algorithm%20is%20restricted%20to%20only%0A%20%20%20%20%20%2A%20using%20integer%20operations.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20sqrt%28uint256%20a%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Take%20care%20of%20easy%20edge%20cases%20when%20a%20%3D%3D%200%20or%20a%20%3D%3D%201%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28a%20%3C%3D%201%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20a%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20In%20this%20function%2C%20we%20use%20Newton%27s%20method%20to%20get%20a%20root%20of%20%60f%28x%29%20%3A%3D%20x%C2%B2%20-%20a%60.%20It%20involves%20building%20a%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20sequence%20x_n%20that%20converges%20toward%20sqrt%28a%29.%20For%20each%20iteration%20x_n%2C%20we%20also%20define%20the%20error%20between%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20the%20current%20value%20as%20%60%CE%B5_n%20%3D%20%7C%20x_n%20-%20sqrt%28a%29%20%7C%60.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20For%20our%20first%20estimation%2C%20we%20consider%20%60e%60%20the%20smallest%20power%20of%202%20which%20is%20bigger%20than%20the%20square%20root%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20of%20the%20target.%20%28i.e.%20%602%2A%2A%28e-1%29%20%E2%89%A4%20sqrt%28a%29%20%3C%202%2A%2Ae%60%29.%20We%20know%20that%20%60e%20%E2%89%A4%20128%60%20because%20%60%282%C2%B9%C2%B2%E2%81%B8%29%C2%B2%20%3D%202%C2%B2%E2%81%B5%E2%81%B6%60%20is%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20bigger%20than%20any%20uint256.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20By%20noticing%20that%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%602%2A%2A%28e-1%29%20%E2%89%A4%20sqrt%28a%29%20%3C%202%2A%2Ae%20%E2%86%92%20%282%2A%2A%28e-1%29%29%C2%B2%20%E2%89%A4%20a%20%3C%20%282%2A%2Ae%29%C2%B2%20%E2%86%92%202%2A%2A%282%2Ae-2%29%20%E2%89%A4%20a%20%3C%202%2A%2A%282%2Ae%29%60%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20we%20can%20deduce%20that%20%60e%20-%201%60%20is%20%60log2%28a%29%20%2F%202%60.%20We%20can%20thus%20compute%20%60x_n%20%3D%202%2A%2A%28e-1%29%60%20using%20a%20method%20similar%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20to%20the%20msb%20function.%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20aa%20%3D%20a%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20xn%20%3D%201%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28aa%20%3E%3D%20%281%20%3C%3C%20128%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20aa%20%3E%3E%3D%20128%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3C%3C%3D%2064%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28aa%20%3E%3D%20%281%20%3C%3C%2064%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20aa%20%3E%3E%3D%2064%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3C%3C%3D%2032%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28aa%20%3E%3D%20%281%20%3C%3C%2032%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20aa%20%3E%3E%3D%2032%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3C%3C%3D%2016%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28aa%20%3E%3D%20%281%20%3C%3C%2016%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20aa%20%3E%3E%3D%2016%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3C%3C%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28aa%20%3E%3D%20%281%20%3C%3C%208%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20aa%20%3E%3E%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3C%3C%3D%204%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28aa%20%3E%3D%20%281%20%3C%3C%204%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20aa%20%3E%3E%3D%204%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3C%3C%3D%202%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28aa%20%3E%3D%20%281%20%3C%3C%202%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3C%3C%3D%201%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20We%20now%20have%20x_n%20such%20that%20%60x_n%20%3D%202%2A%2A%28e-1%29%20%E2%89%A4%20sqrt%28a%29%20%3C%202%2A%2Ae%20%3D%202%20%2A%20x_n%60.%20This%20implies%20%CE%B5_n%20%E2%89%A4%202%2A%2A%28e-1%29.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20We%20can%20refine%20our%20estimation%20by%20noticing%20that%20the%20middle%20of%20that%20interval%20minimizes%20the%20error.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20If%20we%20move%20x_n%20to%20equal%202%2A%2A%28e-1%29%20%2B%202%2A%2A%28e-2%29%2C%20then%20we%20reduce%20the%20error%20to%20%CE%B5_n%20%E2%89%A4%202%2A%2A%28e-2%29.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20This%20is%20going%20to%20be%20our%20x_0%20%28and%20%CE%B5_0%29%0A%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3D%20%283%20%2A%20xn%29%20%3E%3E%201%3B%20%2F%2F%20%CE%B5_0%20%3A%3D%20%7C%20x_0%20-%20sqrt%28a%29%20%7C%20%E2%89%A4%202%2A%2A%28e-2%29%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20From%20here%2C%20Newton%27s%20method%20give%20us%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20x_%7Bn%2B1%7D%20%3D%20%28x_n%20%2B%20a%20%2F%20x_n%29%20%2F%202%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20One%20should%20note%20that%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20x_%7Bn%2B1%7D%C2%B2%20-%20a%20%3D%20%28%28x_n%20%2B%20a%20%2F%20x_n%29%20%2F%202%29%C2%B2%20-%20a%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%20%28%28x_n%C2%B2%20%2B%20a%29%20%2F%20%282%20%2A%20x_n%29%29%C2%B2%20-%20a%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%20%28x_n%E2%81%B4%20%2B%202%20%2A%20a%20%2A%20x_n%C2%B2%20%2B%20a%C2%B2%29%20%2F%20%284%20%2A%20x_n%C2%B2%29%20-%20a%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%20%28x_n%E2%81%B4%20%2B%202%20%2A%20a%20%2A%20x_n%C2%B2%20%2B%20a%C2%B2%20-%204%20%2A%20a%20%2A%20x_n%C2%B2%29%20%2F%20%284%20%2A%20x_n%C2%B2%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%20%28x_n%E2%81%B4%20-%202%20%2A%20a%20%2A%20x_n%C2%B2%20%2B%20a%C2%B2%29%20%2F%20%284%20%2A%20x_n%C2%B2%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%20%28x_n%C2%B2%20-%20a%29%C2%B2%20%2F%20%282%20%2A%20x_n%29%C2%B2%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%20%28%28x_n%C2%B2%20-%20a%29%20%2F%20%282%20%2A%20x_n%29%29%C2%B2%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E2%89%A5%200%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Which%20proves%20that%20for%20all%20n%20%E2%89%A5%201%2C%20sqrt%28a%29%20%E2%89%A4%20x_n%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20This%20gives%20us%20the%20proof%20of%20quadratic%20convergence%20of%20the%20sequence%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%CE%B5_%7Bn%2B1%7D%20%3D%20%7C%20x_%7Bn%2B1%7D%20-%20sqrt%28a%29%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%3D%20%7C%20%28x_n%20%2B%20a%20%2F%20x_n%29%20%2F%202%20-%20sqrt%28a%29%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%3D%20%7C%20%28x_n%C2%B2%20%2B%20a%20-%202%2Ax_n%2Asqrt%28a%29%29%20%2F%20%282%20%2A%20x_n%29%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%3D%20%7C%20%28x_n%20-%20sqrt%28a%29%29%C2%B2%20%2F%20%282%20%2A%20x_n%29%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%3D%20%7C%20%CE%B5_n%C2%B2%20%2F%20%282%20%2A%20x_n%29%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%3D%20%CE%B5_n%C2%B2%20%2F%20%7C%20%282%20%2A%20x_n%29%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20For%20the%20first%20iteration%2C%20we%20have%20a%20special%20case%20where%20x_0%20is%20known%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%CE%B5_1%20%3D%20%CE%B5_0%C2%B2%20%2F%20%7C%20%282%20%2A%20x_0%29%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%E2%89%A4%20%282%2A%2A%28e-2%29%29%C2%B2%20%2F%20%282%20%2A%20%282%2A%2A%28e-1%29%20%2B%202%2A%2A%28e-2%29%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%E2%89%A4%202%2A%2A%282%2Ae-4%29%20%2F%20%283%20%2A%202%2A%2A%28e-1%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%E2%89%A4%202%2A%2A%28e-3%29%20%2F%203%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%E2%89%A4%202%2A%2A%28e-3-log2%283%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%E2%89%A4%202%2A%2A%28e-4.5%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20For%20the%20following%20iterations%2C%20we%20use%20the%20fact%20that%2C%202%2A%2A%28e-1%29%20%E2%89%A4%20sqrt%28a%29%20%E2%89%A4%20x_n%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%CE%B5_%7Bn%2B1%7D%20%3D%20%CE%B5_n%C2%B2%20%2F%20%7C%20%282%20%2A%20x_n%29%20%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%E2%89%A4%20%282%2A%2A%28e-k%29%29%C2%B2%20%2F%20%282%20%2A%202%2A%2A%28e-1%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%E2%89%A4%202%2A%2A%282%2Ae-2%2Ak%29%20%2F%202%2A%2Ae%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20%E2%89%A4%202%2A%2A%28e-2%2Ak%29%0A%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3D%20%28xn%20%2B%20a%20%2F%20xn%29%20%3E%3E%201%3B%20%2F%2F%20%CE%B5_1%20%3A%3D%20%7C%20x_1%20-%20sqrt%28a%29%20%7C%20%E2%89%A4%202%2A%2A%28e-4.5%29%20%20--%20special%20case%2C%20see%20above%0A%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3D%20%28xn%20%2B%20a%20%2F%20xn%29%20%3E%3E%201%3B%20%2F%2F%20%CE%B5_2%20%3A%3D%20%7C%20x_2%20-%20sqrt%28a%29%20%7C%20%E2%89%A4%202%2A%2A%28e-9%29%20%20%20%20--%20general%20case%20with%20k%20%3D%204.5%0A%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3D%20%28xn%20%2B%20a%20%2F%20xn%29%20%3E%3E%201%3B%20%2F%2F%20%CE%B5_3%20%3A%3D%20%7C%20x_3%20-%20sqrt%28a%29%20%7C%20%E2%89%A4%202%2A%2A%28e-18%29%20%20%20--%20general%20case%20with%20k%20%3D%209%0A%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3D%20%28xn%20%2B%20a%20%2F%20xn%29%20%3E%3E%201%3B%20%2F%2F%20%CE%B5_4%20%3A%3D%20%7C%20x_4%20-%20sqrt%28a%29%20%7C%20%E2%89%A4%202%2A%2A%28e-36%29%20%20%20--%20general%20case%20with%20k%20%3D%2018%0A%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3D%20%28xn%20%2B%20a%20%2F%20xn%29%20%3E%3E%201%3B%20%2F%2F%20%CE%B5_5%20%3A%3D%20%7C%20x_5%20-%20sqrt%28a%29%20%7C%20%E2%89%A4%202%2A%2A%28e-72%29%20%20%20--%20general%20case%20with%20k%20%3D%2036%0A%20%20%20%20%20%20%20%20%20%20%20%20xn%20%3D%20%28xn%20%2B%20a%20%2F%20xn%29%20%3E%3E%201%3B%20%2F%2F%20%CE%B5_6%20%3A%3D%20%7C%20x_6%20-%20sqrt%28a%29%20%7C%20%E2%89%A4%202%2A%2A%28e-144%29%20%20--%20general%20case%20with%20k%20%3D%2072%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Because%20e%20%E2%89%A4%20128%20%28as%20discussed%20during%20the%20first%20estimation%20phase%29%2C%20we%20know%20have%20reached%20a%20precision%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%CE%B5_6%20%E2%89%A4%202%2A%2A%28e-144%29%20%3C%201.%20Given%20we%27re%20operating%20on%20integers%2C%20then%20we%20can%20ensure%20that%20xn%20is%20now%20either%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20sqrt%28a%29%20or%20sqrt%28a%29%20%2B%201.%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20xn%20-%20SafeCast.toUint%28xn%20%3E%20a%20%2F%20xn%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Calculates%20sqrt%28a%29%2C%20following%20the%20selected%20rounding%20direction.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20sqrt%28uint256%20a%2C%20Rounding%20rounding%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20result%20%3D%20sqrt%28a%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20result%20%2B%20SafeCast.toUint%28unsignedRoundsUp%28rounding%29%20%26%26%20result%20%2A%20result%20%3C%20a%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Return%20the%20log%20in%20base%202%20of%20a%20positive%20value%20rounded%20towards%20zero.%0A%20%20%20%20%20%2A%20Returns%200%20if%20given%200.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20log2%28uint256%20x%29%20internal%20pure%20returns%20%28uint256%20r%29%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20If%20value%20has%20upper%20128%20bits%20set%2C%20log2%20result%20is%20at%20least%20128%0A%20%20%20%20%20%20%20%20r%20%3D%20SafeCast.toUint%28x%20%3E%200xffffffffffffffffffffffffffffffff%29%20%3C%3C%207%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20If%20upper%2064%20bits%20of%20128-bit%20half%20set%2C%20add%2064%20to%20result%0A%20%20%20%20%20%20%20%20r%20%7C%3D%20SafeCast.toUint%28%28x%20%3E%3E%20r%29%20%3E%200xffffffffffffffff%29%20%3C%3C%206%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20If%20upper%2032%20bits%20of%2064-bit%20half%20set%2C%20add%2032%20to%20result%0A%20%20%20%20%20%20%20%20r%20%7C%3D%20SafeCast.toUint%28%28x%20%3E%3E%20r%29%20%3E%200xffffffff%29%20%3C%3C%205%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20If%20upper%2016%20bits%20of%2032-bit%20half%20set%2C%20add%2016%20to%20result%0A%20%20%20%20%20%20%20%20r%20%7C%3D%20SafeCast.toUint%28%28x%20%3E%3E%20r%29%20%3E%200xffff%29%20%3C%3C%204%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20If%20upper%208%20bits%20of%2016-bit%20half%20set%2C%20add%208%20to%20result%0A%20%20%20%20%20%20%20%20r%20%7C%3D%20SafeCast.toUint%28%28x%20%3E%3E%20r%29%20%3E%200xff%29%20%3C%3C%203%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20If%20upper%204%20bits%20of%208-bit%20half%20set%2C%20add%204%20to%20result%0A%20%20%20%20%20%20%20%20r%20%7C%3D%20SafeCast.toUint%28%28x%20%3E%3E%20r%29%20%3E%200xf%29%20%3C%3C%202%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Shifts%20value%20right%20by%20the%20current%20result%20and%20use%20it%20as%20an%20index%20into%20this%20lookup%20table%3A%0A%20%20%20%20%20%20%20%20%2F%2F%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20x%20%284%20bits%29%20%7C%20%20index%20%20%7C%20table%5Bindex%5D%20%3D%20MSB%20position%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C------------%7C---------%7C-----------------------------%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%200000%20%20%20%20%7C%20%20%20%200%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B0%5D%20%3D%200%20%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%200001%20%20%20%20%7C%20%20%20%201%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B1%5D%20%3D%200%20%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%200010%20%20%20%20%7C%20%20%20%202%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B2%5D%20%3D%201%20%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%200011%20%20%20%20%7C%20%20%20%203%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B3%5D%20%3D%201%20%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%200100%20%20%20%20%7C%20%20%20%204%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B4%5D%20%3D%202%20%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%200101%20%20%20%20%7C%20%20%20%205%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B5%5D%20%3D%202%20%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%200110%20%20%20%20%7C%20%20%20%206%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B6%5D%20%3D%202%20%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%200111%20%20%20%20%7C%20%20%20%207%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B7%5D%20%3D%202%20%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%201000%20%20%20%20%7C%20%20%20%208%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B8%5D%20%3D%203%20%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%201001%20%20%20%20%7C%20%20%20%209%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B9%5D%20%3D%203%20%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%201010%20%20%20%20%7C%20%20%2010%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B10%5D%20%3D%203%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%201011%20%20%20%20%7C%20%20%2011%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B11%5D%20%3D%203%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%201100%20%20%20%20%7C%20%20%2012%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B12%5D%20%3D%203%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%201101%20%20%20%20%7C%20%20%2013%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B13%5D%20%3D%203%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%201110%20%20%20%20%7C%20%20%2014%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B14%5D%20%3D%203%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%20%7C%20%20%20%201111%20%20%20%20%7C%20%20%2015%20%20%20%20%7C%20%20%20%20%20%20%20%20table%5B15%5D%20%3D%203%20%20%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%20%20%2F%2F%0A%20%20%20%20%20%20%20%20%2F%2F%20The%20lookup%20table%20is%20represented%20as%20a%2032-byte%20value%20with%20the%20MSB%20positions%20for%200-15%20in%20the%20last%2016%20bytes.%0A%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20r%20%3A%3D%20or%28r%2C%20byte%28shr%28r%2C%20x%29%2C%200x0000010102020202030303030303030300000000000000000000000000000000%29%29%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Return%20the%20log%20in%20base%202%2C%20following%20the%20selected%20rounding%20direction%2C%20of%20a%20positive%20value.%0A%20%20%20%20%20%2A%20Returns%200%20if%20given%200.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20log2%28uint256%20value%2C%20Rounding%20rounding%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20result%20%3D%20log2%28value%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20result%20%2B%20SafeCast.toUint%28unsignedRoundsUp%28rounding%29%20%26%26%201%20%3C%3C%20result%20%3C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Return%20the%20log%20in%20base%2010%20of%20a%20positive%20value%20rounded%20towards%20zero.%0A%20%20%20%20%20%2A%20Returns%200%20if%20given%200.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20log10%28uint256%20value%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20uint256%20result%20%3D%200%3B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28value%20%3E%3D%2010%20%2A%2A%2064%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20value%20%2F%3D%2010%20%2A%2A%2064%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result%20%2B%3D%2064%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28value%20%3E%3D%2010%20%2A%2A%2032%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20value%20%2F%3D%2010%20%2A%2A%2032%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result%20%2B%3D%2032%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28value%20%3E%3D%2010%20%2A%2A%2016%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20value%20%2F%3D%2010%20%2A%2A%2016%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result%20%2B%3D%2016%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28value%20%3E%3D%2010%20%2A%2A%208%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20value%20%2F%3D%2010%20%2A%2A%208%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28value%20%3E%3D%2010%20%2A%2A%204%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20value%20%2F%3D%2010%20%2A%2A%204%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result%20%2B%3D%204%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28value%20%3E%3D%2010%20%2A%2A%202%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20value%20%2F%3D%2010%20%2A%2A%202%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result%20%2B%3D%202%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28value%20%3E%3D%2010%20%2A%2A%201%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result%20%2B%3D%201%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20result%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Return%20the%20log%20in%20base%2010%2C%20following%20the%20selected%20rounding%20direction%2C%20of%20a%20positive%20value.%0A%20%20%20%20%20%2A%20Returns%200%20if%20given%200.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20log10%28uint256%20value%2C%20Rounding%20rounding%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20result%20%3D%20log10%28value%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20result%20%2B%20SafeCast.toUint%28unsignedRoundsUp%28rounding%29%20%26%26%2010%20%2A%2A%20result%20%3C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Return%20the%20log%20in%20base%20256%20of%20a%20positive%20value%20rounded%20towards%20zero.%0A%20%20%20%20%20%2A%20Returns%200%20if%20given%200.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Adding%20one%20to%20the%20result%20gives%20the%20number%20of%20pairs%20of%20hex%20symbols%20needed%20to%20represent%20%60value%60%20as%20a%20hex%20string.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20log256%28uint256%20x%29%20internal%20pure%20returns%20%28uint256%20r%29%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20If%20value%20has%20upper%20128%20bits%20set%2C%20log2%20result%20is%20at%20least%20128%0A%20%20%20%20%20%20%20%20r%20%3D%20SafeCast.toUint%28x%20%3E%200xffffffffffffffffffffffffffffffff%29%20%3C%3C%207%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20If%20upper%2064%20bits%20of%20128-bit%20half%20set%2C%20add%2064%20to%20result%0A%20%20%20%20%20%20%20%20r%20%7C%3D%20SafeCast.toUint%28%28x%20%3E%3E%20r%29%20%3E%200xffffffffffffffff%29%20%3C%3C%206%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20If%20upper%2032%20bits%20of%2064-bit%20half%20set%2C%20add%2032%20to%20result%0A%20%20%20%20%20%20%20%20r%20%7C%3D%20SafeCast.toUint%28%28x%20%3E%3E%20r%29%20%3E%200xffffffff%29%20%3C%3C%205%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20If%20upper%2016%20bits%20of%2032-bit%20half%20set%2C%20add%2016%20to%20result%0A%20%20%20%20%20%20%20%20r%20%7C%3D%20SafeCast.toUint%28%28x%20%3E%3E%20r%29%20%3E%200xffff%29%20%3C%3C%204%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Add%201%20if%20upper%208%20bits%20of%2016-bit%20half%20set%2C%20and%20divide%20accumulated%20result%20by%208%0A%20%20%20%20%20%20%20%20return%20%28r%20%3E%3E%203%29%20%7C%20SafeCast.toUint%28%28x%20%3E%3E%20r%29%20%3E%200xff%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Return%20the%20log%20in%20base%20256%2C%20following%20the%20selected%20rounding%20direction%2C%20of%20a%20positive%20value.%0A%20%20%20%20%20%2A%20Returns%200%20if%20given%200.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20log256%28uint256%20value%2C%20Rounding%20rounding%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20result%20%3D%20log256%28value%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20result%20%2B%20SafeCast.toUint%28unsignedRoundsUp%28rounding%29%20%26%26%201%20%3C%3C%20%28result%20%3C%3C%203%29%20%3C%20value%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20whether%20a%20provided%20rounding%20mode%20is%20considered%20rounding%20up%20for%20unsigned%20integers.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20unsignedRoundsUp%28Rounding%20rounding%29%20internal%20pure%20returns%20%28bool%29%20%7B%0A%20%20%20%20%20%20%20%20return%20uint8%28rounding%29%20%25%202%20%3D%3D%201%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Futils%2FStrings.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.4.0%29%20%28utils%2FStrings.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20String%20operations.%0A%20%2A%2F%0Alibrary%20Strings%20%7B%0A%20%20%20%20using%20SafeCast%20for%20%2A%3B%0A%0A%20%20%20%20bytes16%20private%20constant%20HEX_DIGITS%20%3D%20%220123456789abcdef%22%3B%0A%20%20%20%20uint8%20private%20constant%20ADDRESS_LENGTH%20%3D%2020%3B%0A%20%20%20%20uint256%20private%20constant%20SPECIAL_CHARS_LOOKUP%20%3D%0A%20%20%20%20%20%20%20%20%281%20%3C%3C%200x08%29%20%7C%20%2F%2F%20backspace%0A%20%20%20%20%20%20%20%20%20%20%20%20%281%20%3C%3C%200x09%29%20%7C%20%2F%2F%20tab%0A%20%20%20%20%20%20%20%20%20%20%20%20%281%20%3C%3C%200x0a%29%20%7C%20%2F%2F%20newline%0A%20%20%20%20%20%20%20%20%20%20%20%20%281%20%3C%3C%200x0c%29%20%7C%20%2F%2F%20form%20feed%0A%20%20%20%20%20%20%20%20%20%20%20%20%281%20%3C%3C%200x0d%29%20%7C%20%2F%2F%20carriage%20return%0A%20%20%20%20%20%20%20%20%20%20%20%20%281%20%3C%3C%200x22%29%20%7C%20%2F%2F%20double%20quote%0A%20%20%20%20%20%20%20%20%20%20%20%20%281%20%3C%3C%200x5c%29%3B%20%2F%2F%20backslash%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20The%20%60value%60%20string%20doesn%27t%20fit%20in%20the%20specified%20%60length%60.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20StringsInsufficientHexLength%28uint256%20value%2C%20uint256%20length%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20The%20string%20being%20parsed%20contains%20characters%20that%20are%20not%20in%20scope%20of%20the%20given%20base.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20StringsInvalidChar%28%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20The%20string%20being%20parsed%20is%20not%20a%20properly%20formatted%20address.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20error%20StringsInvalidAddressFormat%28%29%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Converts%20a%20%60uint256%60%20to%20its%20ASCII%20%60string%60%20decimal%20representation.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toString%28uint256%20value%29%20internal%20pure%20returns%20%28string%20memory%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20length%20%3D%20Math.log10%28value%29%20%2B%201%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20string%20memory%20buffer%20%3D%20new%20string%28length%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256%20ptr%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ptr%20%3A%3D%20add%28add%28buffer%2C%200x20%29%2C%20length%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20while%20%28true%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ptr--%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20mstore8%28ptr%2C%20byte%28mod%28value%2C%2010%29%2C%20HEX_DIGITS%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20value%20%2F%3D%2010%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28value%20%3D%3D%200%29%20break%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20buffer%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Converts%20a%20%60int256%60%20to%20its%20ASCII%20%60string%60%20decimal%20representation.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toStringSigned%28int256%20value%29%20internal%20pure%20returns%20%28string%20memory%29%20%7B%0A%20%20%20%20%20%20%20%20return%20string.concat%28value%20%3C%200%20%3F%20%22-%22%20%3A%20%22%22%2C%20toString%28SignedMath.abs%28value%29%29%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Converts%20a%20%60uint256%60%20to%20its%20ASCII%20%60string%60%20hexadecimal%20representation.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toHexString%28uint256%20value%29%20internal%20pure%20returns%20%28string%20memory%29%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20toHexString%28value%2C%20Math.log256%28value%29%20%2B%201%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Converts%20a%20%60uint256%60%20to%20its%20ASCII%20%60string%60%20hexadecimal%20representation%20with%20fixed%20length.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toHexString%28uint256%20value%2C%20uint256%20length%29%20internal%20pure%20returns%20%28string%20memory%29%20%7B%0A%20%20%20%20%20%20%20%20uint256%20localValue%20%3D%20value%3B%0A%20%20%20%20%20%20%20%20bytes%20memory%20buffer%20%3D%20new%20bytes%282%20%2A%20length%20%2B%202%29%3B%0A%20%20%20%20%20%20%20%20buffer%5B0%5D%20%3D%20%220%22%3B%0A%20%20%20%20%20%20%20%20buffer%5B1%5D%20%3D%20%22x%22%3B%0A%20%20%20%20%20%20%20%20for%20%28uint256%20i%20%3D%202%20%2A%20length%20%2B%201%3B%20i%20%3E%201%3B%20--i%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20buffer%5Bi%5D%20%3D%20HEX_DIGITS%5BlocalValue%20%26%200xf%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20localValue%20%3E%3E%3D%204%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20%28localValue%20%21%3D%200%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20StringsInsufficientHexLength%28value%2C%20length%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20string%28buffer%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Converts%20an%20%60address%60%20with%20fixed%20length%20of%2020%20bytes%20to%20its%20not%20checksummed%20ASCII%20%60string%60%20hexadecimal%0A%20%20%20%20%20%2A%20representation.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toHexString%28address%20addr%29%20internal%20pure%20returns%20%28string%20memory%29%20%7B%0A%20%20%20%20%20%20%20%20return%20toHexString%28uint256%28uint160%28addr%29%29%2C%20ADDRESS_LENGTH%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Converts%20an%20%60address%60%20with%20fixed%20length%20of%2020%20bytes%20to%20its%20checksummed%20ASCII%20%60string%60%20hexadecimal%0A%20%20%20%20%20%2A%20representation%2C%20according%20to%20EIP-55.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20toChecksumHexString%28address%20addr%29%20internal%20pure%20returns%20%28string%20memory%29%20%7B%0A%20%20%20%20%20%20%20%20bytes%20memory%20buffer%20%3D%20bytes%28toHexString%28addr%29%29%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20hash%20the%20hex%20part%20of%20buffer%20%28skip%20length%20%2B%202%20bytes%2C%20length%2040%29%0A%20%20%20%20%20%20%20%20uint256%20hashValue%3B%0A%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20hashValue%20%3A%3D%20shr%2896%2C%20keccak256%28add%28buffer%2C%200x22%29%2C%2040%29%29%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20for%20%28uint256%20i%20%3D%2041%3B%20i%20%3E%201%3B%20--i%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20possible%20values%20for%20buffer%5Bi%5D%20are%2048%20%280%29%20to%2057%20%289%29%20and%2097%20%28a%29%20to%20102%20%28f%29%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28hashValue%20%26%200xf%20%3E%207%20%26%26%20uint8%28buffer%5Bi%5D%29%20%3E%2096%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20case%20shift%20by%20xoring%20with%200x20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20buffer%5Bi%5D%20%5E%3D%200x20%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20hashValue%20%3E%3E%3D%204%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20string%28buffer%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20true%20if%20the%20two%20strings%20are%20equal.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20equal%28string%20memory%20a%2C%20string%20memory%20b%29%20internal%20pure%20returns%20%28bool%29%20%7B%0A%20%20%20%20%20%20%20%20return%20bytes%28a%29.length%20%3D%3D%20bytes%28b%29.length%20%26%26%20keccak256%28bytes%28a%29%29%20%3D%3D%20keccak256%28bytes%28b%29%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Parse%20a%20decimal%20string%20and%20returns%20the%20value%20as%20a%20%60uint256%60.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%20-%20The%20string%20must%20be%20formatted%20as%20%60%5B0-9%5D%2A%60%0A%20%20%20%20%20%2A%20-%20The%20result%20must%20fit%20into%20an%20%60uint256%60%20type%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20parseUint%28string%20memory%20input%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20return%20parseUint%28input%2C%200%2C%20bytes%28input%29.length%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BparseUint-string%7D%20that%20parses%20a%20substring%20of%20%60input%60%20located%20between%20position%20%60begin%60%20%28included%29%20and%0A%20%20%20%20%20%2A%20%60end%60%20%28excluded%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%20-%20The%20substring%20must%20be%20formatted%20as%20%60%5B0-9%5D%2A%60%0A%20%20%20%20%20%2A%20-%20The%20result%20must%20fit%20into%20an%20%60uint256%60%20type%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20parseUint%28string%20memory%20input%2C%20uint256%20begin%2C%20uint256%20end%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20%28bool%20success%2C%20uint256%20value%29%20%3D%20tryParseUint%28input%2C%20begin%2C%20end%29%3B%0A%20%20%20%20%20%20%20%20if%20%28%21success%29%20revert%20StringsInvalidChar%28%29%3B%0A%20%20%20%20%20%20%20%20return%20value%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BparseUint-string%7D%20that%20returns%20false%20if%20the%20parsing%20fails%20because%20of%20an%20invalid%20character.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20NOTE%3A%20This%20function%20will%20revert%20if%20the%20result%20does%20not%20fit%20in%20a%20%60uint256%60.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryParseUint%28string%20memory%20input%29%20internal%20pure%20returns%20%28bool%20success%2C%20uint256%20value%29%20%7B%0A%20%20%20%20%20%20%20%20return%20_tryParseUintUncheckedBounds%28input%2C%200%2C%20bytes%28input%29.length%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BparseUint-string-uint256-uint256%7D%20that%20returns%20false%20if%20the%20parsing%20fails%20because%20of%20an%20invalid%0A%20%20%20%20%20%2A%20character.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20NOTE%3A%20This%20function%20will%20revert%20if%20the%20result%20does%20not%20fit%20in%20a%20%60uint256%60.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryParseUint%28%0A%20%20%20%20%20%20%20%20string%20memory%20input%2C%0A%20%20%20%20%20%20%20%20uint256%20begin%2C%0A%20%20%20%20%20%20%20%20uint256%20end%0A%20%20%20%20%29%20internal%20pure%20returns%20%28bool%20success%2C%20uint256%20value%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28end%20%3E%20bytes%28input%29.length%20%7C%7C%20begin%20%3E%20end%29%20return%20%28false%2C%200%29%3B%0A%20%20%20%20%20%20%20%20return%20_tryParseUintUncheckedBounds%28input%2C%20begin%2C%20end%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Implementation%20of%20%7BtryParseUint-string-uint256-uint256%7D%20that%20does%20not%20check%20bounds.%20Caller%20should%20make%20sure%20that%0A%20%20%20%20%20%2A%20%60begin%20%3C%3D%20end%20%3C%3D%20input.length%60.%20Other%20inputs%20would%20result%20in%20undefined%20behavior.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_tryParseUintUncheckedBounds%28%0A%20%20%20%20%20%20%20%20string%20memory%20input%2C%0A%20%20%20%20%20%20%20%20uint256%20begin%2C%0A%20%20%20%20%20%20%20%20uint256%20end%0A%20%20%20%20%29%20private%20pure%20returns%20%28bool%20success%2C%20uint256%20value%29%20%7B%0A%20%20%20%20%20%20%20%20bytes%20memory%20buffer%20%3D%20bytes%28input%29%3B%0A%0A%20%20%20%20%20%20%20%20uint256%20result%20%3D%200%3B%0A%20%20%20%20%20%20%20%20for%20%28uint256%20i%20%3D%20begin%3B%20i%20%3C%20end%3B%20%2B%2Bi%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20uint8%20chr%20%3D%20_tryParseChr%28bytes1%28_unsafeReadBytesOffset%28buffer%2C%20i%29%29%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28chr%20%3E%209%29%20return%20%28false%2C%200%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20result%20%2A%3D%2010%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20result%20%2B%3D%20chr%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20%28true%2C%20result%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Parse%20a%20decimal%20string%20and%20returns%20the%20value%20as%20a%20%60int256%60.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%20-%20The%20string%20must%20be%20formatted%20as%20%60%5B-%2B%5D%3F%5B0-9%5D%2A%60%0A%20%20%20%20%20%2A%20-%20The%20result%20must%20fit%20in%20an%20%60int256%60%20type.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20parseInt%28string%20memory%20input%29%20internal%20pure%20returns%20%28int256%29%20%7B%0A%20%20%20%20%20%20%20%20return%20parseInt%28input%2C%200%2C%20bytes%28input%29.length%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BparseInt-string%7D%20that%20parses%20a%20substring%20of%20%60input%60%20located%20between%20position%20%60begin%60%20%28included%29%20and%0A%20%20%20%20%20%2A%20%60end%60%20%28excluded%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%20-%20The%20substring%20must%20be%20formatted%20as%20%60%5B-%2B%5D%3F%5B0-9%5D%2A%60%0A%20%20%20%20%20%2A%20-%20The%20result%20must%20fit%20in%20an%20%60int256%60%20type.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20parseInt%28string%20memory%20input%2C%20uint256%20begin%2C%20uint256%20end%29%20internal%20pure%20returns%20%28int256%29%20%7B%0A%20%20%20%20%20%20%20%20%28bool%20success%2C%20int256%20value%29%20%3D%20tryParseInt%28input%2C%20begin%2C%20end%29%3B%0A%20%20%20%20%20%20%20%20if%20%28%21success%29%20revert%20StringsInvalidChar%28%29%3B%0A%20%20%20%20%20%20%20%20return%20value%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BparseInt-string%7D%20that%20returns%20false%20if%20the%20parsing%20fails%20because%20of%20an%20invalid%20character%20or%20if%0A%20%20%20%20%20%2A%20the%20result%20does%20not%20fit%20in%20a%20%60int256%60.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20NOTE%3A%20This%20function%20will%20revert%20if%20the%20absolute%20value%20of%20the%20result%20does%20not%20fit%20in%20a%20%60uint256%60.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryParseInt%28string%20memory%20input%29%20internal%20pure%20returns%20%28bool%20success%2C%20int256%20value%29%20%7B%0A%20%20%20%20%20%20%20%20return%20_tryParseIntUncheckedBounds%28input%2C%200%2C%20bytes%28input%29.length%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20uint256%20private%20constant%20ABS_MIN_INT256%20%3D%202%20%2A%2A%20255%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BparseInt-string-uint256-uint256%7D%20that%20returns%20false%20if%20the%20parsing%20fails%20because%20of%20an%20invalid%0A%20%20%20%20%20%2A%20character%20or%20if%20the%20result%20does%20not%20fit%20in%20a%20%60int256%60.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20NOTE%3A%20This%20function%20will%20revert%20if%20the%20absolute%20value%20of%20the%20result%20does%20not%20fit%20in%20a%20%60uint256%60.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryParseInt%28%0A%20%20%20%20%20%20%20%20string%20memory%20input%2C%0A%20%20%20%20%20%20%20%20uint256%20begin%2C%0A%20%20%20%20%20%20%20%20uint256%20end%0A%20%20%20%20%29%20internal%20pure%20returns%20%28bool%20success%2C%20int256%20value%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28end%20%3E%20bytes%28input%29.length%20%7C%7C%20begin%20%3E%20end%29%20return%20%28false%2C%200%29%3B%0A%20%20%20%20%20%20%20%20return%20_tryParseIntUncheckedBounds%28input%2C%20begin%2C%20end%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Implementation%20of%20%7BtryParseInt-string-uint256-uint256%7D%20that%20does%20not%20check%20bounds.%20Caller%20should%20make%20sure%20that%0A%20%20%20%20%20%2A%20%60begin%20%3C%3D%20end%20%3C%3D%20input.length%60.%20Other%20inputs%20would%20result%20in%20undefined%20behavior.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_tryParseIntUncheckedBounds%28%0A%20%20%20%20%20%20%20%20string%20memory%20input%2C%0A%20%20%20%20%20%20%20%20uint256%20begin%2C%0A%20%20%20%20%20%20%20%20uint256%20end%0A%20%20%20%20%29%20private%20pure%20returns%20%28bool%20success%2C%20int256%20value%29%20%7B%0A%20%20%20%20%20%20%20%20bytes%20memory%20buffer%20%3D%20bytes%28input%29%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Check%20presence%20of%20a%20negative%20sign.%0A%20%20%20%20%20%20%20%20bytes1%20sign%20%3D%20begin%20%3D%3D%20end%20%3F%20bytes1%280%29%20%3A%20bytes1%28_unsafeReadBytesOffset%28buffer%2C%20begin%29%29%3B%20%2F%2F%20don%27t%20do%20out-of-bound%20%28possibly%20unsafe%29%20read%20if%20sub-string%20is%20empty%0A%20%20%20%20%20%20%20%20bool%20positiveSign%20%3D%20sign%20%3D%3D%20bytes1%28%22%2B%22%29%3B%0A%20%20%20%20%20%20%20%20bool%20negativeSign%20%3D%20sign%20%3D%3D%20bytes1%28%22-%22%29%3B%0A%20%20%20%20%20%20%20%20uint256%20offset%20%3D%20%28positiveSign%20%7C%7C%20negativeSign%29.toUint%28%29%3B%0A%0A%20%20%20%20%20%20%20%20%28bool%20absSuccess%2C%20uint256%20absValue%29%20%3D%20tryParseUint%28input%2C%20begin%20%2B%20offset%2C%20end%29%3B%0A%0A%20%20%20%20%20%20%20%20if%20%28absSuccess%20%26%26%20absValue%20%3C%20ABS_MIN_INT256%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%28true%2C%20negativeSign%20%3F%20-int256%28absValue%29%20%3A%20int256%28absValue%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20if%20%28absSuccess%20%26%26%20negativeSign%20%26%26%20absValue%20%3D%3D%20ABS_MIN_INT256%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%28true%2C%20type%28int256%29.min%29%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20return%20%28false%2C%200%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Parse%20a%20hexadecimal%20string%20%28with%20or%20without%20%220x%22%20prefix%29%2C%20and%20returns%20the%20value%20as%20a%20%60uint256%60.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%20-%20The%20string%20must%20be%20formatted%20as%20%60%280x%29%3F%5B0-9a-fA-F%5D%2A%60%0A%20%20%20%20%20%2A%20-%20The%20result%20must%20fit%20in%20an%20%60uint256%60%20type.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20parseHexUint%28string%20memory%20input%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20return%20parseHexUint%28input%2C%200%2C%20bytes%28input%29.length%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BparseHexUint-string%7D%20that%20parses%20a%20substring%20of%20%60input%60%20located%20between%20position%20%60begin%60%20%28included%29%20and%0A%20%20%20%20%20%2A%20%60end%60%20%28excluded%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%20-%20The%20substring%20must%20be%20formatted%20as%20%60%280x%29%3F%5B0-9a-fA-F%5D%2A%60%0A%20%20%20%20%20%2A%20-%20The%20result%20must%20fit%20in%20an%20%60uint256%60%20type.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20parseHexUint%28string%20memory%20input%2C%20uint256%20begin%2C%20uint256%20end%29%20internal%20pure%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20%28bool%20success%2C%20uint256%20value%29%20%3D%20tryParseHexUint%28input%2C%20begin%2C%20end%29%3B%0A%20%20%20%20%20%20%20%20if%20%28%21success%29%20revert%20StringsInvalidChar%28%29%3B%0A%20%20%20%20%20%20%20%20return%20value%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BparseHexUint-string%7D%20that%20returns%20false%20if%20the%20parsing%20fails%20because%20of%20an%20invalid%20character.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20NOTE%3A%20This%20function%20will%20revert%20if%20the%20result%20does%20not%20fit%20in%20a%20%60uint256%60.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryParseHexUint%28string%20memory%20input%29%20internal%20pure%20returns%20%28bool%20success%2C%20uint256%20value%29%20%7B%0A%20%20%20%20%20%20%20%20return%20_tryParseHexUintUncheckedBounds%28input%2C%200%2C%20bytes%28input%29.length%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BparseHexUint-string-uint256-uint256%7D%20that%20returns%20false%20if%20the%20parsing%20fails%20because%20of%20an%0A%20%20%20%20%20%2A%20invalid%20character.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20NOTE%3A%20This%20function%20will%20revert%20if%20the%20result%20does%20not%20fit%20in%20a%20%60uint256%60.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryParseHexUint%28%0A%20%20%20%20%20%20%20%20string%20memory%20input%2C%0A%20%20%20%20%20%20%20%20uint256%20begin%2C%0A%20%20%20%20%20%20%20%20uint256%20end%0A%20%20%20%20%29%20internal%20pure%20returns%20%28bool%20success%2C%20uint256%20value%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28end%20%3E%20bytes%28input%29.length%20%7C%7C%20begin%20%3E%20end%29%20return%20%28false%2C%200%29%3B%0A%20%20%20%20%20%20%20%20return%20_tryParseHexUintUncheckedBounds%28input%2C%20begin%2C%20end%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Implementation%20of%20%7BtryParseHexUint-string-uint256-uint256%7D%20that%20does%20not%20check%20bounds.%20Caller%20should%20make%20sure%20that%0A%20%20%20%20%20%2A%20%60begin%20%3C%3D%20end%20%3C%3D%20input.length%60.%20Other%20inputs%20would%20result%20in%20undefined%20behavior.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_tryParseHexUintUncheckedBounds%28%0A%20%20%20%20%20%20%20%20string%20memory%20input%2C%0A%20%20%20%20%20%20%20%20uint256%20begin%2C%0A%20%20%20%20%20%20%20%20uint256%20end%0A%20%20%20%20%29%20private%20pure%20returns%20%28bool%20success%2C%20uint256%20value%29%20%7B%0A%20%20%20%20%20%20%20%20bytes%20memory%20buffer%20%3D%20bytes%28input%29%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20skip%200x%20prefix%20if%20present%0A%20%20%20%20%20%20%20%20bool%20hasPrefix%20%3D%20%28end%20%3E%20begin%20%2B%201%29%20%26%26%20bytes2%28_unsafeReadBytesOffset%28buffer%2C%20begin%29%29%20%3D%3D%20bytes2%28%220x%22%29%3B%20%2F%2F%20don%27t%20do%20out-of-bound%20%28possibly%20unsafe%29%20read%20if%20sub-string%20is%20empty%0A%20%20%20%20%20%20%20%20uint256%20offset%20%3D%20hasPrefix.toUint%28%29%20%2A%202%3B%0A%0A%20%20%20%20%20%20%20%20uint256%20result%20%3D%200%3B%0A%20%20%20%20%20%20%20%20for%20%28uint256%20i%20%3D%20begin%20%2B%20offset%3B%20i%20%3C%20end%3B%20%2B%2Bi%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20uint8%20chr%20%3D%20_tryParseChr%28bytes1%28_unsafeReadBytesOffset%28buffer%2C%20i%29%29%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28chr%20%3E%2015%29%20return%20%28false%2C%200%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20result%20%2A%3D%2016%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Multiplying%20by%2016%20is%20equivalent%20to%20a%20shift%20of%204%20bits%20%28with%20additional%20overflow%20check%29.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20This%20guarantees%20that%20adding%20a%20value%20%3C%2016%20will%20not%20cause%20an%20overflow%2C%20hence%20the%20unchecked.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result%20%2B%3D%20chr%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20%28true%2C%20result%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Parse%20a%20hexadecimal%20string%20%28with%20or%20without%20%220x%22%20prefix%29%2C%20and%20returns%20the%20value%20as%20an%20%60address%60.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%20-%20The%20string%20must%20be%20formatted%20as%20%60%280x%29%3F%5B0-9a-fA-F%5D%7B40%7D%60%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20parseAddress%28string%20memory%20input%29%20internal%20pure%20returns%20%28address%29%20%7B%0A%20%20%20%20%20%20%20%20return%20parseAddress%28input%2C%200%2C%20bytes%28input%29.length%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BparseAddress-string%7D%20that%20parses%20a%20substring%20of%20%60input%60%20located%20between%20position%20%60begin%60%20%28included%29%20and%0A%20%20%20%20%20%2A%20%60end%60%20%28excluded%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%20-%20The%20substring%20must%20be%20formatted%20as%20%60%280x%29%3F%5B0-9a-fA-F%5D%7B40%7D%60%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20parseAddress%28string%20memory%20input%2C%20uint256%20begin%2C%20uint256%20end%29%20internal%20pure%20returns%20%28address%29%20%7B%0A%20%20%20%20%20%20%20%20%28bool%20success%2C%20address%20value%29%20%3D%20tryParseAddress%28input%2C%20begin%2C%20end%29%3B%0A%20%20%20%20%20%20%20%20if%20%28%21success%29%20revert%20StringsInvalidAddressFormat%28%29%3B%0A%20%20%20%20%20%20%20%20return%20value%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BparseAddress-string%7D%20that%20returns%20false%20if%20the%20parsing%20fails%20because%20the%20input%20is%20not%20a%20properly%0A%20%20%20%20%20%2A%20formatted%20address.%20See%20%7BparseAddress-string%7D%20requirements.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryParseAddress%28string%20memory%20input%29%20internal%20pure%20returns%20%28bool%20success%2C%20address%20value%29%20%7B%0A%20%20%20%20%20%20%20%20return%20tryParseAddress%28input%2C%200%2C%20bytes%28input%29.length%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%7BparseAddress-string-uint256-uint256%7D%20that%20returns%20false%20if%20the%20parsing%20fails%20because%20input%20is%20not%20a%20properly%0A%20%20%20%20%20%2A%20formatted%20address.%20See%20%7BparseAddress-string-uint256-uint256%7D%20requirements.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20tryParseAddress%28%0A%20%20%20%20%20%20%20%20string%20memory%20input%2C%0A%20%20%20%20%20%20%20%20uint256%20begin%2C%0A%20%20%20%20%20%20%20%20uint256%20end%0A%20%20%20%20%29%20internal%20pure%20returns%20%28bool%20success%2C%20address%20value%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28end%20%3E%20bytes%28input%29.length%20%7C%7C%20begin%20%3E%20end%29%20return%20%28false%2C%20address%280%29%29%3B%0A%0A%20%20%20%20%20%20%20%20bool%20hasPrefix%20%3D%20%28end%20%3E%20begin%20%2B%201%29%20%26%26%20bytes2%28_unsafeReadBytesOffset%28bytes%28input%29%2C%20begin%29%29%20%3D%3D%20bytes2%28%220x%22%29%3B%20%2F%2F%20don%27t%20do%20out-of-bound%20%28possibly%20unsafe%29%20read%20if%20sub-string%20is%20empty%0A%20%20%20%20%20%20%20%20uint256%20expectedLength%20%3D%2040%20%2B%20hasPrefix.toUint%28%29%20%2A%202%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20check%20that%20input%20is%20the%20correct%20length%0A%20%20%20%20%20%20%20%20if%20%28end%20-%20begin%20%3D%3D%20expectedLength%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20length%20guarantees%20that%20this%20does%20not%20overflow%2C%20and%20value%20is%20at%20most%20type%28uint160%29.max%0A%20%20%20%20%20%20%20%20%20%20%20%20%28bool%20s%2C%20uint256%20v%29%20%3D%20_tryParseHexUintUncheckedBounds%28input%2C%20begin%2C%20end%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%28s%2C%20address%28uint160%28v%29%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%28false%2C%20address%280%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20_tryParseChr%28bytes1%20chr%29%20private%20pure%20returns%20%28uint8%29%20%7B%0A%20%20%20%20%20%20%20%20uint8%20value%20%3D%20uint8%28chr%29%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Try%20to%20parse%20%60chr%60%3A%0A%20%20%20%20%20%20%20%20%2F%2F%20-%20Case%201%3A%20%5B0-9%5D%0A%20%20%20%20%20%20%20%20%2F%2F%20-%20Case%202%3A%20%5Ba-f%5D%0A%20%20%20%20%20%20%20%20%2F%2F%20-%20Case%203%3A%20%5BA-F%5D%0A%20%20%20%20%20%20%20%20%2F%2F%20-%20otherwise%20not%20supported%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28value%20%3E%2047%20%26%26%20value%20%3C%2058%29%20value%20-%3D%2048%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20else%20if%20%28value%20%3E%2096%20%26%26%20value%20%3C%20103%29%20value%20-%3D%2087%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20else%20if%20%28value%20%3E%2064%20%26%26%20value%20%3C%2071%29%20value%20-%3D%2055%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20else%20return%20type%28uint8%29.max%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20return%20value%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Escape%20special%20characters%20in%20JSON%20strings.%20This%20can%20be%20useful%20to%20prevent%20JSON%20injection%20in%20NFT%20metadata.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20WARNING%3A%20This%20function%20should%20only%20be%20used%20in%20double%20quoted%20JSON%20strings.%20Single%20quotes%20are%20not%20escaped.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20NOTE%3A%20This%20function%20escapes%20all%20unicode%20characters%2C%20and%20not%20just%20the%20ones%20in%20ranges%20defined%20in%20section%202.5%20of%0A%20%20%20%20%20%2A%20RFC-4627%20%28U%2B0000%20to%20U%2B001F%2C%20U%2B0022%20and%20U%2B005C%29.%20ECMAScript%27s%20%60JSON.parse%60%20does%20recover%20escaped%20unicode%0A%20%20%20%20%20%2A%20characters%20that%20are%20not%20in%20this%20range%2C%20but%20other%20tooling%20may%20provide%20different%20results.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20escapeJSON%28string%20memory%20input%29%20internal%20pure%20returns%20%28string%20memory%29%20%7B%0A%20%20%20%20%20%20%20%20bytes%20memory%20buffer%20%3D%20bytes%28input%29%3B%0A%20%20%20%20%20%20%20%20bytes%20memory%20output%20%3D%20new%20bytes%282%20%2A%20buffer.length%29%3B%20%2F%2F%20worst%20case%20scenario%0A%20%20%20%20%20%20%20%20uint256%20outputLength%20%3D%200%3B%0A%0A%20%20%20%20%20%20%20%20for%20%28uint256%20i%3B%20i%20%3C%20buffer.length%3B%20%2B%2Bi%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20bytes1%20char%20%3D%20bytes1%28_unsafeReadBytesOffset%28buffer%2C%20i%29%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28%28%28SPECIAL_CHARS_LOOKUP%20%26%20%281%20%3C%3C%20uint8%28char%29%29%29%20%21%3D%200%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5BoutputLength%2B%2B%5D%20%3D%20%22%5C%5C%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28char%20%3D%3D%200x08%29%20output%5BoutputLength%2B%2B%5D%20%3D%20%22b%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20else%20if%20%28char%20%3D%3D%200x09%29%20output%5BoutputLength%2B%2B%5D%20%3D%20%22t%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20else%20if%20%28char%20%3D%3D%200x0a%29%20output%5BoutputLength%2B%2B%5D%20%3D%20%22n%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20else%20if%20%28char%20%3D%3D%200x0c%29%20output%5BoutputLength%2B%2B%5D%20%3D%20%22f%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20else%20if%20%28char%20%3D%3D%200x0d%29%20output%5BoutputLength%2B%2B%5D%20%3D%20%22r%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20else%20if%20%28char%20%3D%3D%200x5c%29%20output%5BoutputLength%2B%2B%5D%20%3D%20%22%5C%5C%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20else%20if%20%28char%20%3D%3D%200x22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20solhint-disable-next-line%20quotes%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5BoutputLength%2B%2B%5D%20%3D%20%27%22%27%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5BoutputLength%2B%2B%5D%20%3D%20char%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%20write%20the%20actual%20length%20and%20deallocate%20unused%20memory%0A%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore%28output%2C%20outputLength%29%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore%280x40%2C%20add%28output%2C%20shl%285%2C%20shr%285%2C%20add%28outputLength%2C%2063%29%29%29%29%29%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20return%20string%28output%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Reads%20a%20bytes32%20from%20a%20bytes%20array%20without%20bounds%20checking.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20NOTE%3A%20making%20this%20function%20internal%20would%20mean%20it%20could%20be%20used%20with%20memory%20unsafe%20offset%2C%20and%20marking%20the%0A%20%20%20%20%20%2A%20assembly%20block%20as%20such%20would%20prevent%20some%20optimizations.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_unsafeReadBytesOffset%28bytes%20memory%20buffer%2C%20uint256%20offset%29%20private%20pure%20returns%20%28bytes32%20value%29%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20This%20is%20not%20memory%20safe%20in%20the%20general%20case%2C%20but%20all%20calls%20to%20this%20private%20function%20are%20within%20bounds.%0A%20%20%20%20%20%20%20%20assembly%20%28%22memory-safe%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20value%20%3A%3D%20mload%28add%28add%28buffer%2C%200x20%29%2C%20offset%29%29%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20lib%2Fopenzeppelin-contracts%2Fcontracts%2Ftoken%2FERC721%2FERC721.sol%0A%0A%2F%2F%20OpenZeppelin%20Contracts%20%28last%20updated%20v5.4.0%29%20%28token%2FERC721%2FERC721.sol%29%0A%0A%2F%2A%2A%0A%20%2A%20%40dev%20Implementation%20of%20https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-721%5BERC-721%5D%20Non-Fungible%20Token%20Standard%2C%20including%0A%20%2A%20the%20Metadata%20extension%2C%20but%20not%20including%20the%20Enumerable%20extension%2C%20which%20is%20available%20separately%20as%0A%20%2A%20%7BERC721Enumerable%7D.%0A%20%2A%2F%0Aabstract%20contract%20ERC721%20is%20Context%2C%20ERC165%2C%20IERC721%2C%20IERC721Metadata%2C%20IERC721Errors%20%7B%0A%20%20%20%20using%20Strings%20for%20uint256%3B%0A%0A%20%20%20%20%2F%2F%20Token%20name%0A%20%20%20%20string%20private%20_name%3B%0A%0A%20%20%20%20%2F%2F%20Token%20symbol%0A%20%20%20%20string%20private%20_symbol%3B%0A%0A%20%20%20%20mapping%28uint256%20tokenId%20%3D%3E%20address%29%20private%20_owners%3B%0A%0A%20%20%20%20mapping%28address%20owner%20%3D%3E%20uint256%29%20private%20_balances%3B%0A%0A%20%20%20%20mapping%28uint256%20tokenId%20%3D%3E%20address%29%20private%20_tokenApprovals%3B%0A%0A%20%20%20%20mapping%28address%20owner%20%3D%3E%20mapping%28address%20operator%20%3D%3E%20bool%29%29%20private%20_operatorApprovals%3B%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Initializes%20the%20contract%20by%20setting%20a%20%60name%60%20and%20a%20%60symbol%60%20to%20the%20token%20collection.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20constructor%28string%20memory%20name_%2C%20string%20memory%20symbol_%29%20%7B%0A%20%20%20%20%20%20%20%20_name%20%3D%20name_%3B%0A%20%20%20%20%20%20%20%20_symbol%20%3D%20symbol_%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC165%0A%20%20%20%20function%20supportsInterface%28bytes4%20interfaceId%29%20public%20view%20virtual%20override%28ERC165%2C%20IERC165%29%20returns%20%28bool%29%20%7B%0A%20%20%20%20%20%20%20%20return%0A%20%20%20%20%20%20%20%20%20%20%20%20interfaceId%20%3D%3D%20type%28IERC721%29.interfaceId%20%7C%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20interfaceId%20%3D%3D%20type%28IERC721Metadata%29.interfaceId%20%7C%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20super.supportsInterface%28interfaceId%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC721%0A%20%20%20%20function%20balanceOf%28address%20owner%29%20public%20view%20virtual%20returns%20%28uint256%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28owner%20%3D%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721InvalidOwner%28address%280%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20_balances%5Bowner%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC721%0A%20%20%20%20function%20ownerOf%28uint256%20tokenId%29%20public%20view%20virtual%20returns%20%28address%29%20%7B%0A%20%20%20%20%20%20%20%20return%20_requireOwned%28tokenId%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC721Metadata%0A%20%20%20%20function%20name%28%29%20public%20view%20virtual%20returns%20%28string%20memory%29%20%7B%0A%20%20%20%20%20%20%20%20return%20_name%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC721Metadata%0A%20%20%20%20function%20symbol%28%29%20public%20view%20virtual%20returns%20%28string%20memory%29%20%7B%0A%20%20%20%20%20%20%20%20return%20_symbol%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC721Metadata%0A%20%20%20%20function%20tokenURI%28uint256%20tokenId%29%20public%20view%20virtual%20returns%20%28string%20memory%29%20%7B%0A%20%20%20%20%20%20%20%20_requireOwned%28tokenId%29%3B%0A%0A%20%20%20%20%20%20%20%20string%20memory%20baseURI%20%3D%20_baseURI%28%29%3B%0A%20%20%20%20%20%20%20%20return%20bytes%28baseURI%29.length%20%3E%200%20%3F%20string.concat%28baseURI%2C%20tokenId.toString%28%29%29%20%3A%20%22%22%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Base%20URI%20for%20computing%20%7BtokenURI%7D.%20If%20set%2C%20the%20resulting%20URI%20for%20each%0A%20%20%20%20%20%2A%20token%20will%20be%20the%20concatenation%20of%20the%20%60baseURI%60%20and%20the%20%60tokenId%60.%20Empty%0A%20%20%20%20%20%2A%20by%20default%2C%20can%20be%20overridden%20in%20child%20contracts.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_baseURI%28%29%20internal%20view%20virtual%20returns%20%28string%20memory%29%20%7B%0A%20%20%20%20%20%20%20%20return%20%22%22%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC721%0A%20%20%20%20function%20approve%28address%20to%2C%20uint256%20tokenId%29%20public%20virtual%20%7B%0A%20%20%20%20%20%20%20%20_approve%28to%2C%20tokenId%2C%20_msgSender%28%29%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC721%0A%20%20%20%20function%20getApproved%28uint256%20tokenId%29%20public%20view%20virtual%20returns%20%28address%29%20%7B%0A%20%20%20%20%20%20%20%20_requireOwned%28tokenId%29%3B%0A%0A%20%20%20%20%20%20%20%20return%20_getApproved%28tokenId%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC721%0A%20%20%20%20function%20setApprovalForAll%28address%20operator%2C%20bool%20approved%29%20public%20virtual%20%7B%0A%20%20%20%20%20%20%20%20_setApprovalForAll%28_msgSender%28%29%2C%20operator%2C%20approved%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC721%0A%20%20%20%20function%20isApprovedForAll%28address%20owner%2C%20address%20operator%29%20public%20view%20virtual%20returns%20%28bool%29%20%7B%0A%20%20%20%20%20%20%20%20return%20_operatorApprovals%5Bowner%5D%5Boperator%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC721%0A%20%20%20%20function%20transferFrom%28address%20from%2C%20address%20to%2C%20uint256%20tokenId%29%20public%20virtual%20%7B%0A%20%20%20%20%20%20%20%20if%20%28to%20%3D%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721InvalidReceiver%28address%280%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%20Setting%20an%20%22auth%22%20arguments%20enables%20the%20%60_isAuthorized%60%20check%20which%20verifies%20that%20the%20token%20exists%0A%20%20%20%20%20%20%20%20%2F%2F%20%28from%20%21%3D%200%29.%20Therefore%2C%20it%20is%20not%20needed%20to%20verify%20that%20the%20return%20value%20is%20not%200%20here.%0A%20%20%20%20%20%20%20%20address%20previousOwner%20%3D%20_update%28to%2C%20tokenId%2C%20_msgSender%28%29%29%3B%0A%20%20%20%20%20%20%20%20if%20%28previousOwner%20%21%3D%20from%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721IncorrectOwner%28from%2C%20tokenId%2C%20previousOwner%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC721%0A%20%20%20%20function%20safeTransferFrom%28address%20from%2C%20address%20to%2C%20uint256%20tokenId%29%20public%20%7B%0A%20%20%20%20%20%20%20%20safeTransferFrom%28from%2C%20to%2C%20tokenId%2C%20%22%22%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40inheritdoc%20IERC721%0A%20%20%20%20function%20safeTransferFrom%28address%20from%2C%20address%20to%2C%20uint256%20tokenId%2C%20bytes%20memory%20data%29%20public%20virtual%20%7B%0A%20%20%20%20%20%20%20%20transferFrom%28from%2C%20to%2C%20tokenId%29%3B%0A%20%20%20%20%20%20%20%20ERC721Utils.checkOnERC721Received%28_msgSender%28%29%2C%20from%2C%20to%2C%20tokenId%2C%20data%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20owner%20of%20the%20%60tokenId%60.%20Does%20NOT%20revert%20if%20token%20doesn%27t%20exist%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20IMPORTANT%3A%20Any%20overrides%20to%20this%20function%20that%20add%20ownership%20of%20tokens%20not%20tracked%20by%20the%0A%20%20%20%20%20%2A%20core%20ERC-721%20logic%20MUST%20be%20matched%20with%20the%20use%20of%20%7B_increaseBalance%7D%20to%20keep%20balances%0A%20%20%20%20%20%2A%20consistent%20with%20ownership.%20The%20invariant%20to%20preserve%20is%20that%20for%20any%20address%20%60a%60%20the%20value%20returned%20by%0A%20%20%20%20%20%2A%20%60balanceOf%28a%29%60%20must%20be%20equal%20to%20the%20number%20of%20tokens%20such%20that%20%60_ownerOf%28tokenId%29%60%20is%20%60a%60.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_ownerOf%28uint256%20tokenId%29%20internal%20view%20virtual%20returns%20%28address%29%20%7B%0A%20%20%20%20%20%20%20%20return%20_owners%5BtokenId%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20the%20approved%20address%20for%20%60tokenId%60.%20Returns%200%20if%20%60tokenId%60%20is%20not%20minted.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_getApproved%28uint256%20tokenId%29%20internal%20view%20virtual%20returns%20%28address%29%20%7B%0A%20%20%20%20%20%20%20%20return%20_tokenApprovals%5BtokenId%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Returns%20whether%20%60spender%60%20is%20allowed%20to%20manage%20%60owner%60%27s%20tokens%2C%20or%20%60tokenId%60%20in%0A%20%20%20%20%20%2A%20particular%20%28ignoring%20whether%20it%20is%20owned%20by%20%60owner%60%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20WARNING%3A%20This%20function%20assumes%20that%20%60owner%60%20is%20the%20actual%20owner%20of%20%60tokenId%60%20and%20does%20not%20verify%20this%0A%20%20%20%20%20%2A%20assumption.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_isAuthorized%28address%20owner%2C%20address%20spender%2C%20uint256%20tokenId%29%20internal%20view%20virtual%20returns%20%28bool%29%20%7B%0A%20%20%20%20%20%20%20%20return%0A%20%20%20%20%20%20%20%20%20%20%20%20spender%20%21%3D%20address%280%29%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%28owner%20%3D%3D%20spender%20%7C%7C%20isApprovedForAll%28owner%2C%20spender%29%20%7C%7C%20_getApproved%28tokenId%29%20%3D%3D%20spender%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Checks%20if%20%60spender%60%20can%20operate%20on%20%60tokenId%60%2C%20assuming%20the%20provided%20%60owner%60%20is%20the%20actual%20owner.%0A%20%20%20%20%20%2A%20Reverts%20if%3A%0A%20%20%20%20%20%2A%20-%20%60spender%60%20does%20not%20have%20approval%20from%20%60owner%60%20for%20%60tokenId%60.%0A%20%20%20%20%20%2A%20-%20%60spender%60%20does%20not%20have%20approval%20to%20manage%20all%20of%20%60owner%60%27s%20assets.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20WARNING%3A%20This%20function%20assumes%20that%20%60owner%60%20is%20the%20actual%20owner%20of%20%60tokenId%60%20and%20does%20not%20verify%20this%0A%20%20%20%20%20%2A%20assumption.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_checkAuthorized%28address%20owner%2C%20address%20spender%2C%20uint256%20tokenId%29%20internal%20view%20virtual%20%7B%0A%20%20%20%20%20%20%20%20if%20%28%21_isAuthorized%28owner%2C%20spender%2C%20tokenId%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28owner%20%3D%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721NonexistentToken%28tokenId%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721InsufficientApproval%28spender%2C%20tokenId%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Unsafe%20write%20access%20to%20the%20balances%2C%20used%20by%20extensions%20that%20%22mint%22%20tokens%20using%20an%20%7BownerOf%7D%20override.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20NOTE%3A%20the%20value%20is%20limited%20to%20type%28uint128%29.max.%20This%20protect%20against%20_balance%20overflow.%20It%20is%20unrealistic%20that%0A%20%20%20%20%20%2A%20a%20uint256%20would%20ever%20overflow%20from%20increments%20when%20these%20increments%20are%20bounded%20to%20uint128%20values.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20WARNING%3A%20Increasing%20an%20account%27s%20balance%20using%20this%20function%20tends%20to%20be%20paired%20with%20an%20override%20of%20the%0A%20%20%20%20%20%2A%20%7B_ownerOf%7D%20function%20to%20resolve%20the%20ownership%20of%20the%20corresponding%20tokens%20so%20that%20balances%20and%20ownership%0A%20%20%20%20%20%2A%20remain%20consistent%20with%20one%20another.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_increaseBalance%28address%20account%2C%20uint128%20value%29%20internal%20virtual%20%7B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20_balances%5Baccount%5D%20%2B%3D%20value%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Transfers%20%60tokenId%60%20from%20its%20current%20owner%20to%20%60to%60%2C%20or%20alternatively%20mints%20%28or%20burns%29%20if%20the%20current%20owner%0A%20%20%20%20%20%2A%20%28or%20%60to%60%29%20is%20the%20zero%20address.%20Returns%20the%20owner%20of%20the%20%60tokenId%60%20before%20the%20update.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20The%20%60auth%60%20argument%20is%20optional.%20If%20the%20value%20passed%20is%20non%200%2C%20then%20this%20function%20will%20check%20that%0A%20%20%20%20%20%2A%20%60auth%60%20is%20either%20the%20owner%20of%20the%20token%2C%20or%20approved%20to%20operate%20on%20the%20token%20%28by%20the%20owner%29.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Emits%20a%20%7BTransfer%7D%20event.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20NOTE%3A%20If%20overriding%20this%20function%20in%20a%20way%20that%20tracks%20balances%2C%20see%20also%20%7B_increaseBalance%7D.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_update%28address%20to%2C%20uint256%20tokenId%2C%20address%20auth%29%20internal%20virtual%20returns%20%28address%29%20%7B%0A%20%20%20%20%20%20%20%20address%20from%20%3D%20_ownerOf%28tokenId%29%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Perform%20%28optional%29%20operator%20check%0A%20%20%20%20%20%20%20%20if%20%28auth%20%21%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20_checkAuthorized%28from%2C%20auth%2C%20tokenId%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Execute%20the%20update%0A%20%20%20%20%20%20%20%20if%20%28from%20%21%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Clear%20approval.%20No%20need%20to%20re-authorize%20or%20emit%20the%20Approval%20event%0A%20%20%20%20%20%20%20%20%20%20%20%20_approve%28address%280%29%2C%20tokenId%2C%20address%280%29%2C%20false%29%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20_balances%5Bfrom%5D%20-%3D%201%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20if%20%28to%20%21%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20_balances%5Bto%5D%20%2B%3D%201%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20_owners%5BtokenId%5D%20%3D%20to%3B%0A%0A%20%20%20%20%20%20%20%20emit%20Transfer%28from%2C%20to%2C%20tokenId%29%3B%0A%0A%20%20%20%20%20%20%20%20return%20from%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Mints%20%60tokenId%60%20and%20transfers%20it%20to%20%60to%60.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20WARNING%3A%20Usage%20of%20this%20method%20is%20discouraged%2C%20use%20%7B_safeMint%7D%20whenever%20possible%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20%60tokenId%60%20must%20not%20exist.%0A%20%20%20%20%20%2A%20-%20%60to%60%20cannot%20be%20the%20zero%20address.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Emits%20a%20%7BTransfer%7D%20event.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_mint%28address%20to%2C%20uint256%20tokenId%29%20internal%20%7B%0A%20%20%20%20%20%20%20%20if%20%28to%20%3D%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721InvalidReceiver%28address%280%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20address%20previousOwner%20%3D%20_update%28to%2C%20tokenId%2C%20address%280%29%29%3B%0A%20%20%20%20%20%20%20%20if%20%28previousOwner%20%21%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721InvalidSender%28address%280%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Mints%20%60tokenId%60%2C%20transfers%20it%20to%20%60to%60%20and%20checks%20for%20%60to%60%20acceptance.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20%60tokenId%60%20must%20not%20exist.%0A%20%20%20%20%20%2A%20-%20If%20%60to%60%20refers%20to%20a%20smart%20contract%2C%20it%20must%20implement%20%7BIERC721Receiver-onERC721Received%7D%2C%20which%20is%20called%20upon%20a%20safe%20transfer.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Emits%20a%20%7BTransfer%7D%20event.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_safeMint%28address%20to%2C%20uint256%20tokenId%29%20internal%20%7B%0A%20%20%20%20%20%20%20%20_safeMint%28to%2C%20tokenId%2C%20%22%22%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Same%20as%20%7Bxref-ERC721-_safeMint-address-uint256-%7D%5B%60_safeMint%60%5D%2C%20with%20an%20additional%20%60data%60%20parameter%20which%20is%0A%20%20%20%20%20%2A%20forwarded%20in%20%7BIERC721Receiver-onERC721Received%7D%20to%20contract%20recipients.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_safeMint%28address%20to%2C%20uint256%20tokenId%2C%20bytes%20memory%20data%29%20internal%20virtual%20%7B%0A%20%20%20%20%20%20%20%20_mint%28to%2C%20tokenId%29%3B%0A%20%20%20%20%20%20%20%20ERC721Utils.checkOnERC721Received%28_msgSender%28%29%2C%20address%280%29%2C%20to%2C%20tokenId%2C%20data%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Destroys%20%60tokenId%60.%0A%20%20%20%20%20%2A%20The%20approval%20is%20cleared%20when%20the%20token%20is%20burned.%0A%20%20%20%20%20%2A%20This%20is%20an%20internal%20function%20that%20does%20not%20check%20if%20the%20sender%20is%20authorized%20to%20operate%20on%20the%20token.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20%60tokenId%60%20must%20exist.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Emits%20a%20%7BTransfer%7D%20event.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_burn%28uint256%20tokenId%29%20internal%20%7B%0A%20%20%20%20%20%20%20%20address%20previousOwner%20%3D%20_update%28address%280%29%2C%20tokenId%2C%20address%280%29%29%3B%0A%20%20%20%20%20%20%20%20if%20%28previousOwner%20%3D%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721NonexistentToken%28tokenId%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Transfers%20%60tokenId%60%20from%20%60from%60%20to%20%60to%60.%0A%20%20%20%20%20%2A%20%20As%20opposed%20to%20%7BtransferFrom%7D%2C%20this%20imposes%20no%20restrictions%20on%20msg.sender.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20%60to%60%20cannot%20be%20the%20zero%20address.%0A%20%20%20%20%20%2A%20-%20%60tokenId%60%20token%20must%20be%20owned%20by%20%60from%60.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Emits%20a%20%7BTransfer%7D%20event.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_transfer%28address%20from%2C%20address%20to%2C%20uint256%20tokenId%29%20internal%20%7B%0A%20%20%20%20%20%20%20%20if%20%28to%20%3D%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721InvalidReceiver%28address%280%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20address%20previousOwner%20%3D%20_update%28to%2C%20tokenId%2C%20address%280%29%29%3B%0A%20%20%20%20%20%20%20%20if%20%28previousOwner%20%3D%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721NonexistentToken%28tokenId%29%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20if%20%28previousOwner%20%21%3D%20from%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721IncorrectOwner%28from%2C%20tokenId%2C%20previousOwner%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Safely%20transfers%20%60tokenId%60%20token%20from%20%60from%60%20to%20%60to%60%2C%20checking%20that%20contract%20recipients%0A%20%20%20%20%20%2A%20are%20aware%20of%20the%20ERC-721%20standard%20to%20prevent%20tokens%20from%20being%20forever%20locked.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20%60data%60%20is%20additional%20data%2C%20it%20has%20no%20specified%20format%20and%20it%20is%20sent%20in%20call%20to%20%60to%60.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20This%20internal%20function%20is%20like%20%7BsafeTransferFrom%7D%20in%20the%20sense%20that%20it%20invokes%0A%20%20%20%20%20%2A%20%7BIERC721Receiver-onERC721Received%7D%20on%20the%20receiver%2C%20and%20can%20be%20used%20to%20e.g.%0A%20%20%20%20%20%2A%20implement%20alternative%20mechanisms%20to%20perform%20token%20transfer%2C%20such%20as%20signature-based.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20-%20%60tokenId%60%20token%20must%20exist%20and%20be%20owned%20by%20%60from%60.%0A%20%20%20%20%20%2A%20-%20%60to%60%20cannot%20be%20the%20zero%20address.%0A%20%20%20%20%20%2A%20-%20%60from%60%20cannot%20be%20the%20zero%20address.%0A%20%20%20%20%20%2A%20-%20If%20%60to%60%20refers%20to%20a%20smart%20contract%2C%20it%20must%20implement%20%7BIERC721Receiver-onERC721Received%7D%2C%20which%20is%20called%20upon%20a%20safe%20transfer.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Emits%20a%20%7BTransfer%7D%20event.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_safeTransfer%28address%20from%2C%20address%20to%2C%20uint256%20tokenId%29%20internal%20%7B%0A%20%20%20%20%20%20%20%20_safeTransfer%28from%2C%20to%2C%20tokenId%2C%20%22%22%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Same%20as%20%7Bxref-ERC721-_safeTransfer-address-address-uint256-%7D%5B%60_safeTransfer%60%5D%2C%20with%20an%20additional%20%60data%60%20parameter%20which%20is%0A%20%20%20%20%20%2A%20forwarded%20in%20%7BIERC721Receiver-onERC721Received%7D%20to%20contract%20recipients.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_safeTransfer%28address%20from%2C%20address%20to%2C%20uint256%20tokenId%2C%20bytes%20memory%20data%29%20internal%20virtual%20%7B%0A%20%20%20%20%20%20%20%20_transfer%28from%2C%20to%2C%20tokenId%29%3B%0A%20%20%20%20%20%20%20%20ERC721Utils.checkOnERC721Received%28_msgSender%28%29%2C%20from%2C%20to%2C%20tokenId%2C%20data%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Approve%20%60to%60%20to%20operate%20on%20%60tokenId%60%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20The%20%60auth%60%20argument%20is%20optional.%20If%20the%20value%20passed%20is%20non%200%2C%20then%20this%20function%20will%20check%20that%20%60auth%60%20is%0A%20%20%20%20%20%2A%20either%20the%20owner%20of%20the%20token%2C%20or%20approved%20to%20operate%20on%20all%20tokens%20held%20by%20this%20owner.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Emits%20an%20%7BApproval%7D%20event.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Overrides%20to%20this%20logic%20should%20be%20done%20to%20the%20variant%20with%20an%20additional%20%60bool%20emitEvent%60%20argument.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_approve%28address%20to%2C%20uint256%20tokenId%2C%20address%20auth%29%20internal%20%7B%0A%20%20%20%20%20%20%20%20_approve%28to%2C%20tokenId%2C%20auth%2C%20true%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Variant%20of%20%60_approve%60%20with%20an%20optional%20flag%20to%20enable%20or%20disable%20the%20%7BApproval%7D%20event.%20The%20event%20is%20not%0A%20%20%20%20%20%2A%20emitted%20in%20the%20context%20of%20transfers.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_approve%28address%20to%2C%20uint256%20tokenId%2C%20address%20auth%2C%20bool%20emitEvent%29%20internal%20virtual%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Avoid%20reading%20the%20owner%20unless%20necessary%0A%20%20%20%20%20%20%20%20if%20%28emitEvent%20%7C%7C%20auth%20%21%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20address%20owner%20%3D%20_requireOwned%28tokenId%29%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20We%20do%20not%20use%20_isAuthorized%20because%20single-token%20approvals%20should%20not%20be%20able%20to%20call%20approve%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28auth%20%21%3D%20address%280%29%20%26%26%20owner%20%21%3D%20auth%20%26%26%20%21isApprovedForAll%28owner%2C%20auth%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721InvalidApprover%28auth%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28emitEvent%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20emit%20Approval%28owner%2C%20to%2C%20tokenId%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20_tokenApprovals%5BtokenId%5D%20%3D%20to%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Approve%20%60operator%60%20to%20operate%20on%20all%20of%20%60owner%60%20tokens%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Requirements%3A%0A%20%20%20%20%20%2A%20-%20operator%20can%27t%20be%20the%20address%20zero.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Emits%20an%20%7BApprovalForAll%7D%20event.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_setApprovalForAll%28address%20owner%2C%20address%20operator%2C%20bool%20approved%29%20internal%20virtual%20%7B%0A%20%20%20%20%20%20%20%20if%20%28operator%20%3D%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721InvalidOperator%28operator%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20_operatorApprovals%5Bowner%5D%5Boperator%5D%20%3D%20approved%3B%0A%20%20%20%20%20%20%20%20emit%20ApprovalForAll%28owner%2C%20operator%2C%20approved%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2A%2A%0A%20%20%20%20%20%2A%20%40dev%20Reverts%20if%20the%20%60tokenId%60%20doesn%27t%20have%20a%20current%20owner%20%28it%20hasn%27t%20been%20minted%2C%20or%20it%20has%20been%20burned%29.%0A%20%20%20%20%20%2A%20Returns%20the%20owner.%0A%20%20%20%20%20%2A%0A%20%20%20%20%20%2A%20Overrides%20to%20ownership%20logic%20should%20be%20done%20to%20%7B_ownerOf%7D.%0A%20%20%20%20%20%2A%2F%0A%20%20%20%20function%20_requireOwned%28uint256%20tokenId%29%20internal%20view%20returns%20%28address%29%20%7B%0A%20%20%20%20%20%20%20%20address%20owner%20%3D%20_ownerOf%28tokenId%29%3B%0A%20%20%20%20%20%20%20%20if%20%28owner%20%3D%3D%20address%280%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20revert%20ERC721NonexistentToken%28tokenId%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20owner%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20src%2FPassportNFT.sol%0A%0Acontract%20PassportNFT%20is%20ERC721%2C%20Ownable%20%7B%0A%20%20%20%20uint256%20public%20constant%20MINT_PRICE%20%3D%200.01%20ether%3B%0A%20%20%20%20uint256%20private%20_tokenIdCounter%3B%0A%0A%20%20%20%20%2F%2F%20Pass%20ERC721%20args%20to%20ERC721%20constructor%0A%20%20%20%20%2F%2F%20Pass%20msg.sender%20to%20Ownable%20constructor%0A%20%20%20%20constructor%28string%20memory%20name%2C%20string%20memory%20symbol%29%0A%20%20%20%20%20%20%20%20ERC721%28name%2C%20symbol%29%0A%20%20%20%20%20%20%20%20Ownable%28msg.sender%29%0A%20%20%20%20%7B%7D%0A%0A%20%20%20%20function%20mint%28address%20to%29%20external%20payable%20%7B%0A%20%20%20%20%20%20%20%20require%28msg.value%20%3E%3D%20MINT_PRICE%2C%20%22Insufficient%20payment%22%29%3B%0A%20%20%20%20%20%20%20%20_tokenIdCounter%2B%2B%3B%0A%20%20%20%20%20%20%20%20_safeMint%28to%2C%20_tokenIdCounter%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20withdraw%28%29%20external%20onlyOwner%20%7B%0A%20%20%20%20%20%20%20%20payable%28owner%28%29%29.transfer%28address%28this%29.balance%29%3B%0A%20%20%20%20%7D%0A%7D%0A%0A
&constructorArguements=00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000f456d706f77657250617373706f7274000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000054550415353000000000000000000000000000000000000000000000000000000&contractaddress=0x4F4BBF3B0E10Cbc6E3D9AfbC189799360F6Ddb39&contractname=PassportNFT&compilerversion=v0.8.20+commit.a1b79de6&optimizationUsed=1&runs=200&apikey=FQSX86QUTQYPUNG1WJTYBNC665XPTRYD6J